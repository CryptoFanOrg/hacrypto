This is gnutls.info, produced by makeinfo version 5.2 from gnutls.texi.

This manual is last updated 1 January 2014 for version 3.2.12 of GnuTLS.

Copyright (C) 2001-2013 Free Software Foundation, Inc.\\ Copyright (C)
2001-2013 Nikos Mavrogiannopoulos

     Permission is granted to copy, distribute and/or modify this
     document under the terms of the GNU Free Documentation License,
     Version 1.3 or any later version published by the Free Software
     Foundation; with no Invariant Sections, no Front-Cover Texts, and
     no Back-Cover Texts.  A copy of the license is included in the
     section entitled "GNU Free Documentation License".
INFO-DIR-SECTION Software libraries
START-INFO-DIR-ENTRY
* GnuTLS: (gnutls).		GNU Transport Layer Security Library.
END-INFO-DIR-ENTRY

INFO-DIR-SECTION System Administration
START-INFO-DIR-ENTRY
* certtool: (gnutls)Invoking certtool.	Manipulate certificates and keys.
* gnutls-serv: (gnutls)Invoking gnutls-serv.	GnuTLS test server.
* gnutls-cli: (gnutls)Invoking gnutls-cli.	GnuTLS test client.
* gnutls-cli-debug: (gnutls)Invoking gnutls-cli-debug.	GnuTLS debug client.
* psktool: (gnutls)Invoking psktool.	Simple TLS-Pre-Shared-Keys manager.
* srptool: (gnutls)Invoking srptool.	Simple SRP password tool.
END-INFO-DIR-ENTRY


File: gnutls.info,  Node: Copying Information,  Next: Bibliography,  Prev: API reference,  Up: Top

Appendix F Copying Information
******************************

GNU Free Documentation License
==============================

                     Version 1.3, 3 November 2008

     Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.
     <http://fsf.org/>

     Everyone is permitted to copy and distribute verbatim copies
     of this license document, but changing it is not allowed.

  0. PREAMBLE

     The purpose of this License is to make a manual, textbook, or other
     functional and useful document "free" in the sense of freedom: to
     assure everyone the effective freedom to copy and redistribute it,
     with or without modifying it, either commercially or
     noncommercially.  Secondarily, this License preserves for the
     author and publisher a way to get credit for their work, while not
     being considered responsible for modifications made by others.

     This License is a kind of "copyleft", which means that derivative
     works of the document must themselves be free in the same sense.
     It complements the GNU General Public License, which is a copyleft
     license designed for free software.

     We have designed this License in order to use it for manuals for
     free software, because free software needs free documentation: a
     free program should come with manuals providing the same freedoms
     that the software does.  But this License is not limited to
     software manuals; it can be used for any textual work, regardless
     of subject matter or whether it is published as a printed book.  We
     recommend this License principally for works whose purpose is
     instruction or reference.

  1. APPLICABILITY AND DEFINITIONS

     This License applies to any manual or other work, in any medium,
     that contains a notice placed by the copyright holder saying it can
     be distributed under the terms of this License.  Such a notice
     grants a world-wide, royalty-free license, unlimited in duration,
     to use that work under the conditions stated herein.  The
     "Document", below, refers to any such manual or work.  Any member
     of the public is a licensee, and is addressed as "you".  You accept
     the license if you copy, modify or distribute the work in a way
     requiring permission under copyright law.

     A "Modified Version" of the Document means any work containing the
     Document or a portion of it, either copied verbatim, or with
     modifications and/or translated into another language.

     A "Secondary Section" is a named appendix or a front-matter section
     of the Document that deals exclusively with the relationship of the
     publishers or authors of the Document to the Document's overall
     subject (or to related matters) and contains nothing that could
     fall directly within that overall subject.  (Thus, if the Document
     is in part a textbook of mathematics, a Secondary Section may not
     explain any mathematics.)  The relationship could be a matter of
     historical connection with the subject or with related matters, or
     of legal, commercial, philosophical, ethical or political position
     regarding them.

     The "Invariant Sections" are certain Secondary Sections whose
     titles are designated, as being those of Invariant Sections, in the
     notice that says that the Document is released under this License.
     If a section does not fit the above definition of Secondary then it
     is not allowed to be designated as Invariant.  The Document may
     contain zero Invariant Sections.  If the Document does not identify
     any Invariant Sections then there are none.

     The "Cover Texts" are certain short passages of text that are
     listed, as Front-Cover Texts or Back-Cover Texts, in the notice
     that says that the Document is released under this License.  A
     Front-Cover Text may be at most 5 words, and a Back-Cover Text may
     be at most 25 words.

     A "Transparent" copy of the Document means a machine-readable copy,
     represented in a format whose specification is available to the
     general public, that is suitable for revising the document
     straightforwardly with generic text editors or (for images composed
     of pixels) generic paint programs or (for drawings) some widely
     available drawing editor, and that is suitable for input to text
     formatters or for automatic translation to a variety of formats
     suitable for input to text formatters.  A copy made in an otherwise
     Transparent file format whose markup, or absence of markup, has
     been arranged to thwart or discourage subsequent modification by
     readers is not Transparent.  An image format is not Transparent if
     used for any substantial amount of text.  A copy that is not
     "Transparent" is called "Opaque".

     Examples of suitable formats for Transparent copies include plain
     ASCII without markup, Texinfo input format, LaTeX input format,
     SGML or XML using a publicly available DTD, and standard-conforming
     simple HTML, PostScript or PDF designed for human modification.
     Examples of transparent image formats include PNG, XCF and JPG.
     Opaque formats include proprietary formats that can be read and
     edited only by proprietary word processors, SGML or XML for which
     the DTD and/or processing tools are not generally available, and
     the machine-generated HTML, PostScript or PDF produced by some word
     processors for output purposes only.

     The "Title Page" means, for a printed book, the title page itself,
     plus such following pages as are needed to hold, legibly, the
     material this License requires to appear in the title page.  For
     works in formats which do not have any title page as such, "Title
     Page" means the text near the most prominent appearance of the
     work's title, preceding the beginning of the body of the text.

     The "publisher" means any person or entity that distributes copies
     of the Document to the public.

     A section "Entitled XYZ" means a named subunit of the Document
     whose title either is precisely XYZ or contains XYZ in parentheses
     following text that translates XYZ in another language.  (Here XYZ
     stands for a specific section name mentioned below, such as
     "Acknowledgements", "Dedications", "Endorsements", or "History".)
     To "Preserve the Title" of such a section when you modify the
     Document means that it remains a section "Entitled XYZ" according
     to this definition.

     The Document may include Warranty Disclaimers next to the notice
     which states that this License applies to the Document.  These
     Warranty Disclaimers are considered to be included by reference in
     this License, but only as regards disclaiming warranties: any other
     implication that these Warranty Disclaimers may have is void and
     has no effect on the meaning of this License.

  2. VERBATIM COPYING

     You may copy and distribute the Document in any medium, either
     commercially or noncommercially, provided that this License, the
     copyright notices, and the license notice saying this License
     applies to the Document are reproduced in all copies, and that you
     add no other conditions whatsoever to those of this License.  You
     may not use technical measures to obstruct or control the reading
     or further copying of the copies you make or distribute.  However,
     you may accept compensation in exchange for copies.  If you
     distribute a large enough number of copies you must also follow the
     conditions in section 3.

     You may also lend copies, under the same conditions stated above,
     and you may publicly display copies.

  3. COPYING IN QUANTITY

     If you publish printed copies (or copies in media that commonly
     have printed covers) of the Document, numbering more than 100, and
     the Document's license notice requires Cover Texts, you must
     enclose the copies in covers that carry, clearly and legibly, all
     these Cover Texts: Front-Cover Texts on the front cover, and
     Back-Cover Texts on the back cover.  Both covers must also clearly
     and legibly identify you as the publisher of these copies.  The
     front cover must present the full title with all words of the title
     equally prominent and visible.  You may add other material on the
     covers in addition.  Copying with changes limited to the covers, as
     long as they preserve the title of the Document and satisfy these
     conditions, can be treated as verbatim copying in other respects.

     If the required texts for either cover are too voluminous to fit
     legibly, you should put the first ones listed (as many as fit
     reasonably) on the actual cover, and continue the rest onto
     adjacent pages.

     If you publish or distribute Opaque copies of the Document
     numbering more than 100, you must either include a machine-readable
     Transparent copy along with each Opaque copy, or state in or with
     each Opaque copy a computer-network location from which the general
     network-using public has access to download using public-standard
     network protocols a complete Transparent copy of the Document, free
     of added material.  If you use the latter option, you must take
     reasonably prudent steps, when you begin distribution of Opaque
     copies in quantity, to ensure that this Transparent copy will
     remain thus accessible at the stated location until at least one
     year after the last time you distribute an Opaque copy (directly or
     through your agents or retailers) of that edition to the public.

     It is requested, but not required, that you contact the authors of
     the Document well before redistributing any large number of copies,
     to give them a chance to provide you with an updated version of the
     Document.

  4. MODIFICATIONS

     You may copy and distribute a Modified Version of the Document
     under the conditions of sections 2 and 3 above, provided that you
     release the Modified Version under precisely this License, with the
     Modified Version filling the role of the Document, thus licensing
     distribution and modification of the Modified Version to whoever
     possesses a copy of it.  In addition, you must do these things in
     the Modified Version:

       A. Use in the Title Page (and on the covers, if any) a title
          distinct from that of the Document, and from those of previous
          versions (which should, if there were any, be listed in the
          History section of the Document).  You may use the same title
          as a previous version if the original publisher of that
          version gives permission.

       B. List on the Title Page, as authors, one or more persons or
          entities responsible for authorship of the modifications in
          the Modified Version, together with at least five of the
          principal authors of the Document (all of its principal
          authors, if it has fewer than five), unless they release you
          from this requirement.

       C. State on the Title page the name of the publisher of the
          Modified Version, as the publisher.

       D. Preserve all the copyright notices of the Document.

       E. Add an appropriate copyright notice for your modifications
          adjacent to the other copyright notices.

       F. Include, immediately after the copyright notices, a license
          notice giving the public permission to use the Modified
          Version under the terms of this License, in the form shown in
          the Addendum below.

       G. Preserve in that license notice the full lists of Invariant
          Sections and required Cover Texts given in the Document's
          license notice.

       H. Include an unaltered copy of this License.

       I. Preserve the section Entitled "History", Preserve its Title,
          and add to it an item stating at least the title, year, new
          authors, and publisher of the Modified Version as given on the
          Title Page.  If there is no section Entitled "History" in the
          Document, create one stating the title, year, authors, and
          publisher of the Document as given on its Title Page, then add
          an item describing the Modified Version as stated in the
          previous sentence.

       J. Preserve the network location, if any, given in the Document
          for public access to a Transparent copy of the Document, and
          likewise the network locations given in the Document for
          previous versions it was based on.  These may be placed in the
          "History" section.  You may omit a network location for a work
          that was published at least four years before the Document
          itself, or if the original publisher of the version it refers
          to gives permission.

       K. For any section Entitled "Acknowledgements" or "Dedications",
          Preserve the Title of the section, and preserve in the section
          all the substance and tone of each of the contributor
          acknowledgements and/or dedications given therein.

       L. Preserve all the Invariant Sections of the Document, unaltered
          in their text and in their titles.  Section numbers or the
          equivalent are not considered part of the section titles.

       M. Delete any section Entitled "Endorsements".  Such a section
          may not be included in the Modified Version.

       N. Do not retitle any existing section to be Entitled
          "Endorsements" or to conflict in title with any Invariant
          Section.

       O. Preserve any Warranty Disclaimers.

     If the Modified Version includes new front-matter sections or
     appendices that qualify as Secondary Sections and contain no
     material copied from the Document, you may at your option designate
     some or all of these sections as invariant.  To do this, add their
     titles to the list of Invariant Sections in the Modified Version's
     license notice.  These titles must be distinct from any other
     section titles.

     You may add a section Entitled "Endorsements", provided it contains
     nothing but endorsements of your Modified Version by various
     parties--for example, statements of peer review or that the text
     has been approved by an organization as the authoritative
     definition of a standard.

     You may add a passage of up to five words as a Front-Cover Text,
     and a passage of up to 25 words as a Back-Cover Text, to the end of
     the list of Cover Texts in the Modified Version.  Only one passage
     of Front-Cover Text and one of Back-Cover Text may be added by (or
     through arrangements made by) any one entity.  If the Document
     already includes a cover text for the same cover, previously added
     by you or by arrangement made by the same entity you are acting on
     behalf of, you may not add another; but you may replace the old
     one, on explicit permission from the previous publisher that added
     the old one.

     The author(s) and publisher(s) of the Document do not by this
     License give permission to use their names for publicity for or to
     assert or imply endorsement of any Modified Version.

  5. COMBINING DOCUMENTS

     You may combine the Document with other documents released under
     this License, under the terms defined in section 4 above for
     modified versions, provided that you include in the combination all
     of the Invariant Sections of all of the original documents,
     unmodified, and list them all as Invariant Sections of your
     combined work in its license notice, and that you preserve all
     their Warranty Disclaimers.

     The combined work need only contain one copy of this License, and
     multiple identical Invariant Sections may be replaced with a single
     copy.  If there are multiple Invariant Sections with the same name
     but different contents, make the title of each such section unique
     by adding at the end of it, in parentheses, the name of the
     original author or publisher of that section if known, or else a
     unique number.  Make the same adjustment to the section titles in
     the list of Invariant Sections in the license notice of the
     combined work.

     In the combination, you must combine any sections Entitled
     "History" in the various original documents, forming one section
     Entitled "History"; likewise combine any sections Entitled
     "Acknowledgements", and any sections Entitled "Dedications".  You
     must delete all sections Entitled "Endorsements."

  6. COLLECTIONS OF DOCUMENTS

     You may make a collection consisting of the Document and other
     documents released under this License, and replace the individual
     copies of this License in the various documents with a single copy
     that is included in the collection, provided that you follow the
     rules of this License for verbatim copying of each of the documents
     in all other respects.

     You may extract a single document from such a collection, and
     distribute it individually under this License, provided you insert
     a copy of this License into the extracted document, and follow this
     License in all other respects regarding verbatim copying of that
     document.

  7. AGGREGATION WITH INDEPENDENT WORKS

     A compilation of the Document or its derivatives with other
     separate and independent documents or works, in or on a volume of a
     storage or distribution medium, is called an "aggregate" if the
     copyright resulting from the compilation is not used to limit the
     legal rights of the compilation's users beyond what the individual
     works permit.  When the Document is included in an aggregate, this
     License does not apply to the other works in the aggregate which
     are not themselves derivative works of the Document.

     If the Cover Text requirement of section 3 is applicable to these
     copies of the Document, then if the Document is less than one half
     of the entire aggregate, the Document's Cover Texts may be placed
     on covers that bracket the Document within the aggregate, or the
     electronic equivalent of covers if the Document is in electronic
     form.  Otherwise they must appear on printed covers that bracket
     the whole aggregate.

  8. TRANSLATION

     Translation is considered a kind of modification, so you may
     distribute translations of the Document under the terms of section
     4.  Replacing Invariant Sections with translations requires special
     permission from their copyright holders, but you may include
     translations of some or all Invariant Sections in addition to the
     original versions of these Invariant Sections.  You may include a
     translation of this License, and all the license notices in the
     Document, and any Warranty Disclaimers, provided that you also
     include the original English version of this License and the
     original versions of those notices and disclaimers.  In case of a
     disagreement between the translation and the original version of
     this License or a notice or disclaimer, the original version will
     prevail.

     If a section in the Document is Entitled "Acknowledgements",
     "Dedications", or "History", the requirement (section 4) to
     Preserve its Title (section 1) will typically require changing the
     actual title.

  9. TERMINATION

     You may not copy, modify, sublicense, or distribute the Document
     except as expressly provided under this License.  Any attempt
     otherwise to copy, modify, sublicense, or distribute it is void,
     and will automatically terminate your rights under this License.

     However, if you cease all violation of this License, then your
     license from a particular copyright holder is reinstated (a)
     provisionally, unless and until the copyright holder explicitly and
     finally terminates your license, and (b) permanently, if the
     copyright holder fails to notify you of the violation by some
     reasonable means prior to 60 days after the cessation.

     Moreover, your license from a particular copyright holder is
     reinstated permanently if the copyright holder notifies you of the
     violation by some reasonable means, this is the first time you have
     received notice of violation of this License (for any work) from
     that copyright holder, and you cure the violation prior to 30 days
     after your receipt of the notice.

     Termination of your rights under this section does not terminate
     the licenses of parties who have received copies or rights from you
     under this License.  If your rights have been terminated and not
     permanently reinstated, receipt of a copy of some or all of the
     same material does not give you any rights to use it.

  10. FUTURE REVISIONS OF THIS LICENSE

     The Free Software Foundation may publish new, revised versions of
     the GNU Free Documentation License from time to time.  Such new
     versions will be similar in spirit to the present version, but may
     differ in detail to address new problems or concerns.  See
     <http://www.gnu.org/copyleft/>.

     Each version of the License is given a distinguishing version
     number.  If the Document specifies that a particular numbered
     version of this License "or any later version" applies to it, you
     have the option of following the terms and conditions either of
     that specified version or of any later version that has been
     published (not as a draft) by the Free Software Foundation.  If the
     Document does not specify a version number of this License, you may
     choose any version ever published (not as a draft) by the Free
     Software Foundation.  If the Document specifies that a proxy can
     decide which future versions of this License can be used, that
     proxy's public statement of acceptance of a version permanently
     authorizes you to choose that version for the Document.

  11. RELICENSING

     "Massive Multiauthor Collaboration Site" (or "MMC Site") means any
     World Wide Web server that publishes copyrightable works and also
     provides prominent facilities for anybody to edit those works.  A
     public wiki that anybody can edit is an example of such a server.
     A "Massive Multiauthor Collaboration" (or "MMC") contained in the
     site means any set of copyrightable works thus published on the MMC
     site.

     "CC-BY-SA" means the Creative Commons Attribution-Share Alike 3.0
     license published by Creative Commons Corporation, a not-for-profit
     corporation with a principal place of business in San Francisco,
     California, as well as future copyleft versions of that license
     published by that same organization.

     "Incorporate" means to publish or republish a Document, in whole or
     in part, as part of another Document.

     An MMC is "eligible for relicensing" if it is licensed under this
     License, and if all works that were first published under this
     License somewhere other than this MMC, and subsequently
     incorporated in whole or in part into the MMC, (1) had no cover
     texts or invariant sections, and (2) were thus incorporated prior
     to November 1, 2008.

     The operator of an MMC Site may republish an MMC contained in the
     site under CC-BY-SA on the same site at any time before August 1,
     2009, provided the MMC is eligible for relicensing.

ADDENDUM: How to use this License for your documents
====================================================

To use this License in a document you have written, include a copy of
the License in the document and put the following copyright and license
notices just after the title page:

       Copyright (C)  YEAR  YOUR NAME.
       Permission is granted to copy, distribute and/or modify this document
       under the terms of the GNU Free Documentation License, Version 1.3
       or any later version published by the Free Software Foundation;
       with no Invariant Sections, no Front-Cover Texts, and no Back-Cover
       Texts.  A copy of the license is included in the section entitled ``GNU
       Free Documentation License''.

If you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,
replace the "with...Texts." line with this:

         with the Invariant Sections being LIST THEIR TITLES, with
         the Front-Cover Texts being LIST, and with the Back-Cover Texts
         being LIST.

If you have Invariant Sections without Cover Texts, or some other
combination of the three, merge those two alternatives to suit the
situation.

If your document contains nontrivial examples of program code, we
recommend releasing these examples in parallel under your choice of free
software license, such as the GNU General Public License, to permit
their use in free software.


File: gnutls.info,  Node: Bibliography,  Next: Function and Data Index,  Prev: Copying Information,  Up: Top

Bibliography
************

[CBCATT]
     Bodo Moeller, "Security of CBC Ciphersuites in SSL/TLS: Problems
     and Countermeasures", 2002, available from
     <http://www.openssl.org/~bodo/tls-cbc.txt>.

[GPGH]
     Mike Ashley, "The GNU Privacy Handbook", 2002, available from
     <http://www.gnupg.org/gph/en/manual.pdf>.

[GUTPKI]
     Peter Gutmann, "Everything you never wanted to know about PKI but
     were forced to find out", Available from
     <http://www.cs.auckland.ac.nz/~pgut001/>.

[KEYPIN]
     Chris Evans and Chris Palmer, "Public Key Pinning Extension for
     HTTP", Available from
     <http://tools.ietf.org/html/draft-ietf-websec-key-pinning-01>.

[NISTSP80057]
     NIST Special Publication 800-57, "Recommendation for Key Management
     - Part 1: General (Revised)", March 2007, available from
     <http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57-Part1-revised2_Mar08-2007.pdf>.

[RFC2246]
     Tim Dierks and Christopher Allen, "The TLS Protocol Version 1.0",
     January 1999, Available from <http://www.ietf.org/rfc/rfc2246.txt>.

[RFC4418]
     Ted Krovetz, "UMAC: Message Authentication Code using Universal
     Hashing", March 2006, Available from
     <http://www.ietf.org/rfc/rfc4418.txt>.

[RFC4680]
     S. Santesson, "TLS Handshake Message for Supplemental Data",
     September 2006, Available from
     <http://www.ietf.org/rfc/rfc4680.txt>.

[RFC4514]
     Kurt D. Zeilenga, "Lightweight Directory Access Protocol (LDAP):
     String Representation of Distinguished Names", June 2006, Available
     from <http://www.ietf.org/rfc/rfc4513.txt>.

[RFC4346]
     Tim Dierks and Eric Rescorla, "The TLS Protocol Version 1.1", Match
     2006, Available from <http://www.ietf.org/rfc/rfc4346.txt>.

[RFC4347]
     Eric Rescorla and Nagendra Modadugu, "Datagram Transport Layer
     Security", April 2006, Available from
     <http://www.ietf.org/rfc/rfc4347.txt>.

[RFC5246]
     Tim Dierks and Eric Rescorla, "The TLS Protocol Version 1.2",
     August 2008, Available from <http://www.ietf.org/rfc/rfc5246.txt>.

[RFC2440]
     Jon Callas, Lutz Donnerhacke, Hal Finney and Rodney Thayer,
     "OpenPGP Message Format", November 1998, Available from
     <http://www.ietf.org/rfc/rfc2440.txt>.

[RFC4880]
     Jon Callas, Lutz Donnerhacke, Hal Finney, David Shaw and Rodney
     Thayer, "OpenPGP Message Format", November 2007, Available from
     <http://www.ietf.org/rfc/rfc4880.txt>.

[RFC4211]
     J. Schaad, "Internet X.509 Public Key Infrastructure Certificate
     Request Message Format (CRMF)", September 2005, Available from
     <http://www.ietf.org/rfc/rfc4211.txt>.

[RFC2817]
     Rohit Khare and Scott Lawrence, "Upgrading to TLS Within HTTP/1.1",
     May 2000, Available from <http://www.ietf.org/rfc/rfc2817.txt>

[RFC2818]
     Eric Rescorla, "HTTP Over TLS", May 2000, Available from
     <http://www.ietf/rfc/rfc2818.txt>.

[RFC2945]
     Tom Wu, "The SRP Authentication and Key Exchange System", September
     2000, Available from <http://www.ietf.org/rfc/rfc2945.txt>.

[RFC2986]
     Magnus Nystrom and Burt Kaliski, "PKCS 10 v1.7: Certification
     Request Syntax Specification", November 2000, Available from
     <http://www.ietf.org/rfc/rfc2986.txt>.

[PKIX]
     D. Cooper, S. Santesson, S. Farrel, S. Boeyen, R. Housley, W. Polk,
     "Internet X.509 Public Key Infrastructure Certificate and
     Certificate Revocation List (CRL) Profile", May 2008, available
     from <http://www.ietf.org/rfc/rfc5280.txt>.

[RFC3749]
     Scott Hollenbeck, "Transport Layer Security Protocol Compression
     Methods", May 2004, available from
     <http://www.ietf.org/rfc/rfc3749.txt>.

[RFC3820]
     Steven Tuecke, Von Welch, Doug Engert, Laura Pearlman, and Mary
     Thompson, "Internet X.509 Public Key Infrastructure (PKI) Proxy
     Certificate Profile", June 2004, available from
     <http://www.ietf.org/rfc/rfc3820>.

[RFC6520]
     R. Seggelmann, M. Tuexen, and M. Williams, "Transport Layer
     Security (TLS) and Datagram Transport Layer Security (DTLS)
     Heartbeat Extension", February 2012, available from
     <http://www.ietf.org/rfc/rfc6520>.

[RFC5746]
     E. Rescorla, M. Ray, S. Dispensa, and N. Oskov, "Transport Layer
     Security (TLS) Renegotiation Indication Extension", February 2010,
     available from <http://www.ietf.org/rfc/rfc5746>.

[RFC5280]
     D. Cooper, S. Santesson, S. Farrell, S. Boeyen, R. Housley, and W.
     Polk, "Internet X.509 Public Key Infrastructure Certificate and
     Certificate Revocation List (CRL) Profile", May 2008, available
     from <http://www.ietf.org/rfc/rfc5280>.

[TLSTKT]
     Joseph Salowey, Hao Zhou, Pasi Eronen, Hannes Tschofenig,
     "Transport Layer Security (TLS) Session Resumption without
     Server-Side State", January 2008, available from
     <http://www.ietf.org/rfc/rfc5077>.

[PKCS12]
     RSA Laboratories, "PKCS 12 v1.0: Personal Information Exchange
     Syntax", June 1999, Available from <http://www.rsa.com>.

[PKCS11]
     RSA Laboratories, "PKCS #11 Base Functionality v2.30: Cryptoki –
     Draft 4", July 2009, Available from <http://www.rsa.com>.

[RESCORLA]
     Eric Rescorla, "SSL and TLS: Designing and Building Secure
     Systems", 2001

[SELKEY]
     Arjen Lenstra and Eric Verheul, "Selecting Cryptographic Key
     Sizes", 2003, available from
     <http://www.win.tue.nl/~klenstra/key.pdf>.

[SSL3]
     Alan Freier, Philip Karlton and Paul Kocher, "The Secure Sockets
     Layer (SSL) Protocol Version 3.0", August 2011, Available from
     <http://www.ietf.org/rfc/rfc6101.txt>.

[STEVENS]
     Richard Stevens, "UNIX Network Programming, Volume 1", Prentice
     Hall PTR, January 1998

[TLSEXT]
     Simon Blake-Wilson, Magnus Nystrom, David Hopwood, Jan Mikkelsen
     and Tim Wright, "Transport Layer Security (TLS) Extensions", June
     2003, Available from <http://www.ietf.org/rfc/rfc3546.txt>.

[TLSPGP]
     Nikos Mavrogiannopoulos, "Using OpenPGP keys for TLS
     authentication", January 2011.  Available from
     <http://www.ietf.org/rfc/rfc6091.txt>.

[TLSSRP]
     David Taylor, Trevor Perrin, Tom Wu and Nikos Mavrogiannopoulos,
     "Using SRP for TLS Authentication", November 2007.  Available from
     <http://www.ietf.org/rfc/rfc5054.txt>.

[TLSPSK]
     Pasi Eronen and Hannes Tschofenig, "Pre-shared key Ciphersuites for
     TLS", December 2005, Available from
     <http://www.ietf.org/rfc/rfc4279.txt>.

[TOMSRP]
     Tom Wu, "The Stanford SRP Authentication Project", Available at
     <http://srp.stanford.edu/>.

[WEGER]
     Arjen Lenstra and Xiaoyun Wang and Benne de Weger, "Colliding X.509
     Certificates", Cryptology ePrint Archive, Report 2005/067,
     Available at <http://eprint.iacr.org/>.

[ECRYPT]
     European Network of Excellence in Cryptology II, "ECRYPT II Yearly
     Report on Algorithms and Keysizes (2009-2010)", Available at
     <http://www.ecrypt.eu.org/documents/D.SPA.13.pdf>.

[RFC5056]
     N. Williams, "On the Use of Channel Bindings to Secure Channels",
     November 2007, available from <http://www.ietf.org/rfc/rfc5056>.

[RFC5929]
     J. Altman, N. Williams, L. Zhu, "Channel Bindings for TLS", July
     2010, available from <http://www.ietf.org/rfc/rfc5929>.

[PKCS11URI]
     J. Pechanec, D. Moffat, "The PKCS#11 URI Scheme", January 2013,
     Work in progress, available from
     <http://tools.ietf.org/html/draft-pechanec-pkcs11uri-08>.

[TPMURI]
     C. Latze, N. Mavrogiannopoulos, "The TPMKEY URI Scheme", January
     2013, Work in progress, available from
     <http://tools.ietf.org/html/draft-mavrogiannopoulos-tpmuri-01>.

[ANDERSON]
     R. J. Anderson, "Security Engineering: A Guide to Building
     Dependable Distributed Systems", John Wiley \& Sons, Inc., 2001.

[RFC4821]
     M. Mathis, J. Heffner, "Packetization Layer Path MTU Discovery",
     March 2007, available from <http://www.ietf.org/rfc/rfc4821.txt>.

[RFC2560]
     M. Myers et al, "X.509 Internet Public Key Infrastructure Online
     Certificate Status Protocol - OCSP", June 1999, Available from
     <http://www.ietf.org/rfc/rfc2560.txt>.

[RIVESTCRL]
     R. L. Rivest, "Can We Eliminate Certificate Revocation Lists?",
     Proceedings of Financial Cryptography '98; Springer Lecture Notes
     in Computer Science No.  1465 (Rafael Hirschfeld, ed.), February
     1998), pages 178-183, available from
     <http://people.csail.mit.edu/rivest/Rivest-CanWeEliminateCertificateRevocationLists.pdf>.


File: gnutls.info,  Node: Function and Data Index,  Next: Concept Index,  Prev: Bibliography,  Up: Top

Function and Data Index
***********************

 [index ]
* Menu:

* dane_cert_type_name:                   DANE API.           (line   13)
* dane_cert_usage_name:                  DANE API.           (line   24)
* dane_match_type_name:                  DANE API.           (line   36)
* dane_query_data:                       DANE API.           (line   47)
* dane_query_deinit:                     DANE API.           (line   70)
* dane_query_entries:                    DANE API.           (line   78)
* dane_query_status:                     DANE API.           (line   88)
* dane_query_tlsa:                       DANE API.           (line   99)
* dane_raw_tlsa:                         DANE API.           (line  120)
* dane_state_deinit:                     DANE API.           (line  149)
* dane_state_init:                       DANE API.           (line  157)
* dane_state_set_dlv_file:               DANE API.           (line  170)
* dane_strerror:                         DANE API.           (line  182)
* dane_verification_status_print:        DANE API.           (line  196)
* dane_verify_crt:                       Certificate verification.
                                                             (line  165)
* dane_verify_crt <1>:                   DANE API.           (line  215)
* dane_verify_crt_raw:                   DANE API.           (line  266)
* dane_verify_session_crt:               DANE API.           (line  312)
* gnutls_alert_get:                      Handling alerts.    (line   18)
* gnutls_alert_get <1>:                  Core TLS API.       (line   11)
* gnutls_alert_get_name:                 Handling alerts.    (line   31)
* gnutls_alert_get_name <1>:             Core TLS API.       (line   27)
* gnutls_alert_get_strname:              Core TLS API.       (line   40)
* gnutls_alert_send:                     Handling alerts.    (line   45)
* gnutls_alert_send <1>:                 Core TLS API.       (line   54)
* gnutls_alert_send_appropriate:         Core TLS API.       (line   78)
* gnutls_alpn_get_selected_protocol:     Core TLS API.       (line  101)
* gnutls_alpn_set_protocols:             Core TLS API.       (line  119)
* gnutls_anon_allocate_client_credentials: Core TLS API.     (line  145)
* gnutls_anon_allocate_server_credentials: Core TLS API.     (line  157)
* gnutls_anon_free_client_credentials:   Core TLS API.       (line  169)
* gnutls_anon_free_server_credentials:   Core TLS API.       (line  179)
* gnutls_anon_set_params_function:       Core TLS API.       (line  189)
* gnutls_anon_set_server_dh_params:      Core TLS API.       (line  203)
* gnutls_anon_set_server_params_function: Core TLS API.      (line  217)
* gnutls_auth_client_get_type:           Core TLS API.       (line  231)
* gnutls_auth_get_type:                  Core TLS API.       (line  245)
* gnutls_auth_server_get_type:           Core TLS API.       (line  263)
* gnutls_bye:                            Data transfer and termination.
                                                             (line  148)
* gnutls_bye <1>:                        Core TLS API.       (line  277)
* gnutls_certificate_activation_time_peers: Core TLS API.    (line  313)
* gnutls_certificate_allocate_credentials: Core TLS API.     (line  328)
* gnutls_certificate_client_get_request_status: Core TLS API.
                                                             (line  341)
* gnutls_certificate_client_set_retrieve_function: Compatibility API.
                                                             (line   13)
* gnutls_certificate_expiration_time_peers: Core TLS API.    (line  354)
* gnutls_certificate_free_cas:           Core TLS API.       (line  385)
* gnutls_certificate_free_ca_names:      Core TLS API.       (line  368)
* gnutls_certificate_free_credentials:   Core TLS API.       (line  397)
* gnutls_certificate_free_crls:          Core TLS API.       (line  411)
* gnutls_certificate_free_keys:          Core TLS API.       (line  421)
* gnutls_certificate_get_crt_raw:        Core TLS API.       (line  433)
* gnutls_certificate_get_issuer:         Core TLS API.       (line  459)
* gnutls_certificate_get_ours:           Core TLS API.       (line  481)
* gnutls_certificate_get_peers:          Core TLS API.       (line  496)
* gnutls_certificate_get_peers_subkey_id: Core TLS API.      (line  518)
* gnutls_certificate_send_x509_rdn_sequence: Certificate credentials.
                                                             (line  174)
* gnutls_certificate_send_x509_rdn_sequence <1>: Core TLS API.
                                                             (line  535)
* gnutls_certificate_server_set_request: Certificate credentials.
                                                             (line  162)
* gnutls_certificate_server_set_request <1>: Core TLS API.   (line  553)
* gnutls_certificate_server_set_retrieve_function: Compatibility API.
                                                             (line   54)
* gnutls_certificate_set_dh_params:      Core TLS API.       (line  568)
* gnutls_certificate_set_key:            Certificate credentials.
                                                             (line   67)
* gnutls_certificate_set_key <1>:        Abstract key API.   (line   12)
* gnutls_certificate_set_ocsp_status_request_file: Core TLS API.
                                                             (line  585)
* gnutls_certificate_set_ocsp_status_request_function: Core TLS API.
                                                             (line  609)
* gnutls_certificate_set_openpgp_key:    OpenPGP API.        (line   12)
* gnutls_certificate_set_openpgp_keyring_file: OpenPGP certificates.
                                                             (line  159)
* gnutls_certificate_set_openpgp_keyring_file <1>: OpenPGP API.
                                                             (line  140)
* gnutls_certificate_set_openpgp_keyring_mem: OpenPGP API.   (line  160)
* gnutls_certificate_set_openpgp_key_file: OpenPGP API.      (line   37)
* gnutls_certificate_set_openpgp_key_file2: OpenPGP API.     (line   58)
* gnutls_certificate_set_openpgp_key_mem: OpenPGP API.       (line   88)
* gnutls_certificate_set_openpgp_key_mem2: OpenPGP API.      (line  110)
* gnutls_certificate_set_params_function: Parameter generation.
                                                             (line   39)
* gnutls_certificate_set_params_function <1>: Core TLS API.  (line  643)
* gnutls_certificate_set_pin_function:   Certificate credentials.
                                                             (line   43)
* gnutls_certificate_set_pin_function <1>: Core TLS API.     (line  658)
* gnutls_certificate_set_retrieve_function: Core TLS API.    (line  679)
* gnutls_certificate_set_retrieve_function2: Abstract key API.
                                                             (line   49)
* gnutls_certificate_set_rsa_export_params: Compatibility API.
                                                             (line   82)
* gnutls_certificate_set_trust_list:     X509 certificate API.
                                                             (line   12)
* gnutls_certificate_set_verify_flags:   Core TLS API.       (line  724)
* gnutls_certificate_set_verify_function: Certificate credentials.
                                                             (line  246)
* gnutls_certificate_set_verify_function <1>: Core TLS API.  (line  737)
* gnutls_certificate_set_verify_limits:  Core TLS API.       (line  766)
* gnutls_certificate_set_x509_crl:       Core TLS API.       (line  785)
* gnutls_certificate_set_x509_crl_file:  Core TLS API.       (line  809)
* gnutls_certificate_set_x509_crl_mem:   Core TLS API.       (line  831)
* gnutls_certificate_set_x509_key:       Core TLS API.       (line  853)
* gnutls_certificate_set_x509_key_file:  Core TLS API.       (line  880)
* gnutls_certificate_set_x509_key_file2: Core TLS API.       (line  919)
* gnutls_certificate_set_x509_key_mem:   Core TLS API.       (line  963)
* gnutls_certificate_set_x509_key_mem2:  Core TLS API.       (line  997)
* gnutls_certificate_set_x509_simple_pkcs12_file: Core TLS API.
                                                             (line 1036)
* gnutls_certificate_set_x509_simple_pkcs12_mem: Core TLS API.
                                                             (line 1077)
* gnutls_certificate_set_x509_system_trust: Using a PKCS11 token with TLS.
                                                             (line   14)
* gnutls_certificate_set_x509_system_trust <1>: Core TLS API.
                                                             (line 1120)
* gnutls_certificate_set_x509_trust:     Core TLS API.       (line 1138)
* gnutls_certificate_set_x509_trust_file: Core TLS API.      (line 1165)
* gnutls_certificate_set_x509_trust_mem: Core TLS API.       (line 1196)
* gnutls_certificate_type_get:           Core TLS API.       (line 1221)
* gnutls_certificate_type_get_id:        Core TLS API.       (line 1234)
* gnutls_certificate_type_get_name:      Core TLS API.       (line 1246)
* gnutls_certificate_type_list:          Core TLS API.       (line 1258)
* gnutls_certificate_type_set_priority:  Compatibility API.  (line   96)
* gnutls_certificate_verification_status_print: Core TLS API.
                                                             (line 1269)
* gnutls_certificate_verify_flags:       Verifying a certificate in the context of TLS session.
                                                             (line    6)
* gnutls_certificate_verify_flags <1>:   Certificate verification.
                                                             (line    6)
* gnutls_certificate_verify_peers2:      Core TLS API.       (line 1294)
* gnutls_certificate_verify_peers3:      Certificate credentials.
                                                             (line  214)
* gnutls_certificate_verify_peers3 <1>:  Core TLS API.       (line 1325)
* gnutls_check_version:                  Core TLS API.       (line 1360)
* gnutls_cipher_add_auth:                Cryptographic API.  (line   12)
* gnutls_cipher_decrypt:                 Cryptographic API.  (line   31)
* gnutls_cipher_decrypt2:                Cryptographic API.  (line   53)
* gnutls_cipher_deinit:                  Cryptographic API.  (line   80)
* gnutls_cipher_encrypt:                 Cryptographic API.  (line   91)
* gnutls_cipher_encrypt2:                Cryptographic API.  (line  109)
* gnutls_cipher_get:                     Core TLS API.       (line 1377)
* gnutls_cipher_get_block_size:          Cryptographic API.  (line  132)
* gnutls_cipher_get_id:                  Core TLS API.       (line 1389)
* gnutls_cipher_get_iv_size:             Cryptographic API.  (line  143)
* gnutls_cipher_get_key_size:            Core TLS API.       (line 1401)
* gnutls_cipher_get_name:                Core TLS API.       (line 1413)
* gnutls_cipher_get_tag_size:            Cryptographic API.  (line  156)
* gnutls_cipher_init:                    Cryptographic API.  (line  167)
* gnutls_cipher_list:                    Core TLS API.       (line 1425)
* gnutls_cipher_set_iv:                  Cryptographic API.  (line  190)
* gnutls_cipher_set_priority:            Compatibility API.  (line  114)
* gnutls_cipher_suite_get_name:          Core TLS API.       (line 1441)
* gnutls_cipher_suite_info:              Core TLS API.       (line 1459)
* gnutls_cipher_tag:                     Cryptographic API.  (line  206)
* gnutls_compression_get:                Core TLS API.       (line 1489)
* gnutls_compression_get_id:             Core TLS API.       (line 1501)
* gnutls_compression_get_name:           Core TLS API.       (line 1513)
* gnutls_compression_list:               Core TLS API.       (line 1525)
* gnutls_compression_set_priority:       Compatibility API.  (line  132)
* gnutls_credentials_clear:              Core TLS API.       (line 1536)
* gnutls_credentials_set:                Session initialization.
                                                             (line   50)
* gnutls_credentials_set <1>:            Core TLS API.       (line 1544)
* gnutls_db_check_entry:                 Core TLS API.       (line 1579)
* gnutls_db_check_entry_time:            Core TLS API.       (line 1593)
* gnutls_db_get_default_cache_expiration: Core TLS API.      (line 1604)
* gnutls_db_get_ptr:                     Core TLS API.       (line 1614)
* gnutls_db_remove_session:              Core TLS API.       (line 1625)
* gnutls_db_set_cache_expiration:        Core TLS API.       (line 1639)
* gnutls_db_set_ptr:                     Core TLS API.       (line 1651)
* gnutls_db_set_remove_function:         Core TLS API.       (line 1663)
* gnutls_db_set_retrieve_function:       Core TLS API.       (line 1678)
* gnutls_db_set_store_function:          Core TLS API.       (line 1698)
* gnutls_deinit:                         Data transfer and termination.
                                                             (line  181)
* gnutls_deinit <1>:                     Core TLS API.       (line 1713)
* gnutls_dh_get_group:                   Core TLS API.       (line 1723)
* gnutls_dh_get_peers_public_bits:       Core TLS API.       (line 1743)
* gnutls_dh_get_prime_bits:              Core TLS API.       (line 1757)
* gnutls_dh_get_pubkey:                  Core TLS API.       (line 1773)
* gnutls_dh_get_secret_bits:             Core TLS API.       (line 1790)
* gnutls_dh_params_cpy:                  Core TLS API.       (line 1803)
* gnutls_dh_params_deinit:               Core TLS API.       (line 1818)
* gnutls_dh_params_export2_pkcs3:        Core TLS API.       (line 1827)
* gnutls_dh_params_export_pkcs3:         Core TLS API.       (line 1851)
* gnutls_dh_params_export_raw:           Core TLS API.       (line 1878)
* gnutls_dh_params_generate2:            Core TLS API.       (line 1900)
* gnutls_dh_params_import_pkcs3:         Core TLS API.       (line 1923)
* gnutls_dh_params_import_raw:           Core TLS API.       (line 1945)
* gnutls_dh_params_init:                 Core TLS API.       (line 1964)
* gnutls_dh_set_prime_bits:              Core TLS API.       (line 1975)
* gnutls_digest_get_id:                  Core TLS API.       (line 2003)
* gnutls_digest_get_name:                Core TLS API.       (line 2016)
* gnutls_digest_list:                    Core TLS API.       (line 2028)
* gnutls_dtls_cookie_send:               Datagram TLS API.   (line   11)
* gnutls_dtls_cookie_verify:             Datagram TLS API.   (line   45)
* gnutls_dtls_get_data_mtu:              Datagram TLS API.   (line   74)
* gnutls_dtls_get_mtu:                   Datagram TLS API.   (line   89)
* gnutls_dtls_get_timeout:               Setting up the transport layer.
                                                             (line  160)
* gnutls_dtls_get_timeout <1>:           Datagram TLS API.   (line  104)
* gnutls_dtls_prestate_set:              Datagram TLS API.   (line  121)
* gnutls_dtls_set_data_mtu:              Datagram TLS API.   (line  139)
* gnutls_dtls_set_mtu:                   Datagram TLS API.   (line  165)
* gnutls_dtls_set_timeouts:              Datagram TLS API.   (line  182)
* gnutls_ecc_curve_get:                  Core TLS API.       (line 2042)
* gnutls_ecc_curve_get_name:             Core TLS API.       (line 2056)
* gnutls_ecc_curve_get_size:             Core TLS API.       (line 2070)
* gnutls_ecc_curve_list:                 Core TLS API.       (line 2082)
* gnutls_error_is_fatal:                 Data transfer and termination.
                                                             (line   73)
* gnutls_error_is_fatal <1>:             Core TLS API.       (line 2094)
* gnutls_error_to_alert:                 Handling alerts.    (line   66)
* gnutls_error_to_alert <1>:             Core TLS API.       (line 2115)
* gnutls_est_record_overhead_size:       Core TLS API.       (line 2134)
* gnutls_fingerprint:                    Core TLS API.       (line 2161)
* gnutls_global_deinit:                  Core TLS API.       (line 2188)
* gnutls_global_init:                    Core TLS API.       (line 2199)
* gnutls_global_set_audit_log_function:  Debugging and auditing.
                                                             (line   27)
* gnutls_global_set_audit_log_function <1>: Core TLS API.    (line 2227)
* gnutls_global_set_log_function:        Core TLS API.       (line 2246)
* gnutls_global_set_log_level:           Core TLS API.       (line 2261)
* gnutls_global_set_mem_functions:       Core TLS API.       (line 2274)
* gnutls_global_set_mutex:               Thread safety.      (line   41)
* gnutls_global_set_mutex <1>:           Core TLS API.       (line 2306)
* gnutls_global_set_time_function:       Core TLS API.       (line 2331)
* gnutls_handshake:                      TLS handshake.      (line   10)
* gnutls_handshake <1>:                  Core TLS API.       (line 2345)
* gnutls_handshake_description_get_name: Core TLS API.       (line 2376)
* gnutls_handshake_get_last_in:          Core TLS API.       (line 2388)
* gnutls_handshake_get_last_out:         Core TLS API.       (line 2405)
* gnutls_handshake_set_hook_function:    Core TLS API.       (line 2422)
* gnutls_handshake_set_max_packet_length: Core TLS API.      (line 2461)
* gnutls_handshake_set_post_client_hello_function: Core TLS API.
                                                             (line 2479)
* gnutls_handshake_set_private_extensions: Core TLS API.     (line 2505)
* gnutls_handshake_set_random:           Core TLS API.       (line 2524)
* gnutls_handshake_set_timeout:          TLS handshake.      (line   38)
* gnutls_handshake_set_timeout <1>:      Core TLS API.       (line 2546)
* gnutls_hash:                           Cryptographic API.  (line  224)
* gnutls_hash_deinit:                    Cryptographic API.  (line  242)
* gnutls_hash_fast:                      Cryptographic API.  (line  256)
* gnutls_hash_get_len:                   Cryptographic API.  (line  276)
* gnutls_hash_init:                      Cryptographic API.  (line  290)
* gnutls_hash_output:                    Cryptographic API.  (line  308)
* gnutls_heartbeat_allowed:              Core TLS API.       (line 2562)
* gnutls_heartbeat_enable:               Core TLS API.       (line 2579)
* gnutls_heartbeat_get_timeout:          Core TLS API.       (line 2599)
* gnutls_heartbeat_ping:                 Core TLS API.       (line 2615)
* gnutls_heartbeat_pong:                 Core TLS API.       (line 2643)
* gnutls_heartbeat_set_timeouts:         Core TLS API.       (line 2659)
* gnutls_hex2bin:                        Core TLS API.       (line 2684)
* gnutls_hex_decode:                     Core TLS API.       (line 2705)
* gnutls_hex_encode:                     Core TLS API.       (line 2724)
* gnutls_hmac:                           Cryptographic API.  (line  322)
* gnutls_hmac_deinit:                    Cryptographic API.  (line  340)
* gnutls_hmac_fast:                      Cryptographic API.  (line  354)
* gnutls_hmac_get_len:                   Cryptographic API.  (line  379)
* gnutls_hmac_init:                      Cryptographic API.  (line  392)
* gnutls_hmac_output:                    Cryptographic API.  (line  418)
* gnutls_hmac_set_nonce:                 Cryptographic API.  (line  432)
* gnutls_init:                           Session initialization.
                                                             (line   14)
* gnutls_init <1>:                       Core TLS API.       (line 2743)
* gnutls_key_generate:                   Core TLS API.       (line 2774)
* gnutls_kx_get:                         Core TLS API.       (line 2791)
* gnutls_kx_get_id:                      Core TLS API.       (line 2803)
* gnutls_kx_get_name:                    Core TLS API.       (line 2815)
* gnutls_kx_list:                        Core TLS API.       (line 2827)
* gnutls_kx_set_priority:                Compatibility API.  (line  155)
* gnutls_load_file:                      Core TLS API.       (line 2839)
* gnutls_mac_get:                        Core TLS API.       (line 2857)
* gnutls_mac_get_id:                     Core TLS API.       (line 2869)
* gnutls_mac_get_key_size:               Core TLS API.       (line 2882)
* gnutls_mac_get_name:                   Core TLS API.       (line 2894)
* gnutls_mac_get_nonce_size:             Cryptographic API.  (line  447)
* gnutls_mac_list:                       Core TLS API.       (line 2906)
* gnutls_mac_set_priority:               Compatibility API.  (line  173)
* gnutls_ocsp_req_add_cert:              OCSP API.           (line   12)
* gnutls_ocsp_req_add_cert_id:           OCSP API.           (line   36)
* gnutls_ocsp_req_deinit:                OCSP API.           (line   69)
* gnutls_ocsp_req_export:                OCSP API.           (line   77)
* gnutls_ocsp_req_get_cert_id:           OCSP API.           (line   91)
* gnutls_ocsp_req_get_extension:         OCSP API.           (line  131)
* gnutls_ocsp_req_get_nonce:             OCSP API.           (line  165)
* gnutls_ocsp_req_get_version:           OCSP API.           (line  184)
* gnutls_ocsp_req_import:                OCSP API.           (line  196)
* gnutls_ocsp_req_init:                  OCSP API.           (line  212)
* gnutls_ocsp_req_print:                 OCSP API.           (line  223)
* gnutls_ocsp_req_randomize_nonce:       OCSP API.           (line  246)
* gnutls_ocsp_req_set_extension:         OCSP API.           (line  259)
* gnutls_ocsp_req_set_nonce:             OCSP API.           (line  280)
* gnutls_ocsp_resp_check_crt:            OCSP API.           (line  298)
* gnutls_ocsp_resp_deinit:               OCSP API.           (line  318)
* gnutls_ocsp_resp_export:               OCSP API.           (line  326)
* gnutls_ocsp_resp_get_certs:            OCSP API.           (line  340)
* gnutls_ocsp_resp_get_extension:        OCSP API.           (line  367)
* gnutls_ocsp_resp_get_nonce:            OCSP API.           (line  401)
* gnutls_ocsp_resp_get_produced:         OCSP API.           (line  421)
* gnutls_ocsp_resp_get_responder:        OCSP API.           (line  433)
* gnutls_ocsp_resp_get_response:         OCSP API.           (line  453)
* gnutls_ocsp_resp_get_signature:        OCSP API.           (line  480)
* gnutls_ocsp_resp_get_signature_algorithm: OCSP API.        (line  494)
* gnutls_ocsp_resp_get_single:           OCSP certificate status checking.
                                                             (line  155)
* gnutls_ocsp_resp_get_single <1>:       OCSP API.           (line  508)
* gnutls_ocsp_resp_get_status:           OCSP API.           (line  559)
* gnutls_ocsp_resp_get_version:          OCSP API.           (line  571)
* gnutls_ocsp_resp_import:               OCSP API.           (line  583)
* gnutls_ocsp_resp_init:                 OCSP API.           (line  599)
* gnutls_ocsp_resp_print:                OCSP API.           (line  610)
* gnutls_ocsp_resp_verify:               OCSP API.           (line  633)
* gnutls_ocsp_resp_verify_direct:        OCSP API.           (line  671)
* gnutls_ocsp_status_request_enable_client: Core TLS API.    (line 2918)
* gnutls_ocsp_status_request_get:        Core TLS API.       (line 2943)
* gnutls_ocsp_status_request_is_checked: Core TLS API.       (line 2962)
* gnutls_openpgp_crt_check_hostname:     OpenPGP API.        (line  182)
* gnutls_openpgp_crt_deinit:             OpenPGP API.        (line  197)
* gnutls_openpgp_crt_export:             OpenPGP API.        (line  205)
* gnutls_openpgp_crt_export2:            OpenPGP API.        (line  226)
* gnutls_openpgp_crt_get_auth_subkey:    OpenPGP API.        (line  244)
* gnutls_openpgp_crt_get_creation_time:  OpenPGP API.        (line  263)
* gnutls_openpgp_crt_get_expiration_time: OpenPGP API.       (line  274)
* gnutls_openpgp_crt_get_fingerprint:    OpenPGP API.        (line  286)
* gnutls_openpgp_crt_get_key_id:         OpenPGP API.        (line  303)
* gnutls_openpgp_crt_get_key_usage:      OpenPGP API.        (line  318)
* gnutls_openpgp_crt_get_name:           OpenPGP API.        (line  333)
* gnutls_openpgp_crt_get_pk_algorithm:   OpenPGP API.        (line  354)
* gnutls_openpgp_crt_get_pk_dsa_raw:     OpenPGP API.        (line  374)
* gnutls_openpgp_crt_get_pk_rsa_raw:     OpenPGP API.        (line  399)
* gnutls_openpgp_crt_get_preferred_key_id: OpenPGP API.      (line  420)
* gnutls_openpgp_crt_get_revoked_status: OpenPGP API.        (line  434)
* gnutls_openpgp_crt_get_subkey_count:   OpenPGP API.        (line  448)
* gnutls_openpgp_crt_get_subkey_creation_time: OpenPGP API.  (line  463)
* gnutls_openpgp_crt_get_subkey_expiration_time: OpenPGP API.
                                                             (line  478)
* gnutls_openpgp_crt_get_subkey_fingerprint: OpenPGP API.    (line  494)
* gnutls_openpgp_crt_get_subkey_id:      OpenPGP API.        (line  516)
* gnutls_openpgp_crt_get_subkey_idx:     OpenPGP API.        (line  531)
* gnutls_openpgp_crt_get_subkey_pk_algorithm: OpenPGP API.   (line  546)
* gnutls_openpgp_crt_get_subkey_pk_dsa_raw: OpenPGP API.     (line  572)
* gnutls_openpgp_crt_get_subkey_pk_rsa_raw: OpenPGP API.     (line  599)
* gnutls_openpgp_crt_get_subkey_revoked_status: OpenPGP API. (line  622)
* gnutls_openpgp_crt_get_subkey_usage:   OpenPGP API.        (line  639)
* gnutls_openpgp_crt_get_version:        OpenPGP API.        (line  661)
* gnutls_openpgp_crt_import:             OpenPGP API.        (line  673)
* gnutls_openpgp_crt_init:               OpenPGP API.        (line  690)
* gnutls_openpgp_crt_print:              OpenPGP API.        (line  700)
* gnutls_openpgp_crt_set_preferred_key_id: OpenPGP API.      (line  721)
* gnutls_openpgp_crt_verify_ring:        OpenPGP certificates.
                                                             (line  113)
* gnutls_openpgp_crt_verify_ring <1>:    OpenPGP API.        (line  739)
* gnutls_openpgp_crt_verify_self:        OpenPGP certificates.
                                                             (line  137)
* gnutls_openpgp_crt_verify_self <1>:    OpenPGP API.        (line  766)
* gnutls_openpgp_keyring_check_id:       OpenPGP API.        (line  783)
* gnutls_openpgp_keyring_deinit:         OpenPGP API.        (line  800)
* gnutls_openpgp_keyring_get_crt:        OpenPGP API.        (line  809)
* gnutls_openpgp_keyring_get_crt_count:  OpenPGP API.        (line  828)
* gnutls_openpgp_keyring_import:         OpenPGP API.        (line  841)
* gnutls_openpgp_keyring_init:           OpenPGP API.        (line  859)
* gnutls_openpgp_privkey_deinit:         OpenPGP API.        (line  870)
* gnutls_openpgp_privkey_export:         OpenPGP API.        (line  879)
* gnutls_openpgp_privkey_export2:        OpenPGP API.        (line  908)
* gnutls_openpgp_privkey_export_dsa_raw: OpenPGP API.        (line  933)
* gnutls_openpgp_privkey_export_rsa_raw: OpenPGP API.        (line  961)
* gnutls_openpgp_privkey_export_subkey_dsa_raw: OpenPGP API. (line  991)
* gnutls_openpgp_privkey_export_subkey_rsa_raw: OpenPGP API. (line 1021)
* gnutls_openpgp_privkey_get_fingerprint: OpenPGP API.       (line 1053)
* gnutls_openpgp_privkey_get_key_id:     OpenPGP API.        (line 1072)
* gnutls_openpgp_privkey_get_pk_algorithm: OpenPGP API.      (line 1087)
* gnutls_openpgp_privkey_get_preferred_key_id: OpenPGP API.  (line 1110)
* gnutls_openpgp_privkey_get_revoked_status: OpenPGP API.    (line 1124)
* gnutls_openpgp_privkey_get_subkey_count: OpenPGP API.      (line 1138)
* gnutls_openpgp_privkey_get_subkey_creation_time: OpenPGP API.
                                                             (line 1153)
* gnutls_openpgp_privkey_get_subkey_expiration_time: OpenPGP API.
                                                             (line 1168)
* gnutls_openpgp_privkey_get_subkey_fingerprint: OpenPGP API.
                                                             (line 1184)
* gnutls_openpgp_privkey_get_subkey_id:  OpenPGP API.        (line 1206)
* gnutls_openpgp_privkey_get_subkey_idx: OpenPGP API.        (line 1224)
* gnutls_openpgp_privkey_get_subkey_pk_algorithm: OpenPGP API.
                                                             (line 1240)
* gnutls_openpgp_privkey_get_subkey_revoked_status: OpenPGP API.
                                                             (line 1266)
* gnutls_openpgp_privkey_import:         OpenPGP API.        (line 1282)
* gnutls_openpgp_privkey_init:           OpenPGP API.        (line 1305)
* gnutls_openpgp_privkey_sec_param:      OpenPGP API.        (line 1316)
* gnutls_openpgp_privkey_set_preferred_key_id: OpenPGP API.  (line 1331)
* gnutls_openpgp_privkey_sign_hash:      Compatibility API.  (line  191)
* gnutls_openpgp_send_cert:              Core TLS API.       (line 2980)
* gnutls_openpgp_set_recv_key_function:  OpenPGP API.        (line 1350)
* gnutls_pcert_deinit:                   Abstract key API.   (line   98)
* gnutls_pcert_import_openpgp:           Abstract key API.   (line  108)
* gnutls_pcert_import_openpgp_raw:       Abstract key API.   (line  128)
* gnutls_pcert_import_x509:              Abstract key API.   (line  153)
* gnutls_pcert_import_x509_raw:          Abstract key API.   (line  173)
* gnutls_pcert_list_import_x509_raw:     Abstract key API.   (line  196)
* gnutls_pem_base64_decode:              Core TLS API.       (line 2995)
* gnutls_pem_base64_decode_alloc:        Core TLS API.       (line 3019)
* gnutls_pem_base64_encode:              Core TLS API.       (line 3041)
* gnutls_pem_base64_encode_alloc:        Core TLS API.       (line 3064)
* gnutls_perror:                         Core TLS API.       (line 3085)
* gnutls_pkcs11_add_provider:            PKCS 11 API.        (line   12)
* gnutls_pkcs11_copy_secret_key:         PKCS 11 API.        (line   30)
* gnutls_pkcs11_copy_x509_crt:           Writing objects.    (line   36)
* gnutls_pkcs11_copy_x509_crt <1>:       PKCS 11 API.        (line   55)
* gnutls_pkcs11_copy_x509_privkey:       Writing objects.    (line   13)
* gnutls_pkcs11_copy_x509_privkey <1>:   PKCS 11 API.        (line   77)
* gnutls_pkcs11_deinit:                  PKCS 11 API.        (line  103)
* gnutls_pkcs11_delete_url:              Writing objects.    (line   55)
* gnutls_pkcs11_delete_url <1>:          PKCS 11 API.        (line  112)
* gnutls_pkcs11_get_pin_function:        PKCS 11 API.        (line  129)
* gnutls_pkcs11_get_raw_issuer:          PKCS 11 API.        (line  143)
* gnutls_pkcs11_init:                    PKCS11 Initialization.
                                                             (line   30)
* gnutls_pkcs11_init <1>:                PKCS 11 API.        (line  169)
* gnutls_pkcs11_obj_deinit:              PKCS 11 API.        (line  195)
* gnutls_pkcs11_obj_export:              PKCS 11 API.        (line  205)
* gnutls_pkcs11_obj_export2:             PKCS 11 API.        (line  230)
* gnutls_pkcs11_obj_export3:             PKCS 11 API.        (line  250)
* gnutls_pkcs11_obj_export_url:          PKCS 11 API.        (line  272)
* gnutls_pkcs11_obj_get_info:            Reading objects.    (line   27)
* gnutls_pkcs11_obj_get_info <1>:        PKCS 11 API.        (line  290)
* gnutls_pkcs11_obj_get_type:            PKCS 11 API.        (line  315)
* gnutls_pkcs11_obj_import_url:          PKCS 11 API.        (line  329)
* gnutls_pkcs11_obj_init:                PKCS 11 API.        (line  351)
* gnutls_pkcs11_obj_list_import_url:     PKCS 11 API.        (line  364)
* gnutls_pkcs11_obj_list_import_url2:    PKCS 11 API.        (line  390)
* gnutls_pkcs11_obj_set_pin_function:    PKCS 11 API.        (line  417)
* gnutls_pkcs11_privkey_deinit:          PKCS 11 API.        (line  435)
* gnutls_pkcs11_privkey_export_url:      PKCS 11 API.        (line  444)
* gnutls_pkcs11_privkey_generate:        PKCS 11 API.        (line  461)
* gnutls_pkcs11_privkey_generate2:       PKCS 11 API.        (line  486)
* gnutls_pkcs11_privkey_get_info:        PKCS 11 API.        (line  518)
* gnutls_pkcs11_privkey_get_pk_algorithm: PKCS 11 API.       (line  541)
* gnutls_pkcs11_privkey_import_url:      PKCS 11 API.        (line  557)
* gnutls_pkcs11_privkey_init:            PKCS 11 API.        (line  577)
* gnutls_pkcs11_privkey_set_pin_function: PKCS 11 API.       (line  589)
* gnutls_pkcs11_privkey_status:          PKCS 11 API.        (line  607)
* gnutls_pkcs11_reinit:                  PKCS11 Initialization.
                                                             (line   57)
* gnutls_pkcs11_reinit <1>:              PKCS 11 API.        (line  621)
* gnutls_pkcs11_set_pin_function:        PKCS 11 API.        (line  635)
* gnutls_pkcs11_set_token_function:      PKCS 11 API.        (line  650)
* gnutls_pkcs11_token_get_flags:         PKCS 11 API.        (line  664)
* gnutls_pkcs11_token_get_info:          PKCS 11 API.        (line  684)
* gnutls_pkcs11_token_get_mechanism:     PKCS 11 API.        (line  707)
* gnutls_pkcs11_token_get_random:        PKCS 11 API.        (line  727)
* gnutls_pkcs11_token_get_url:           PKCS 11 API.        (line  745)
* gnutls_pkcs11_token_init:              PKCS 11 API.        (line  765)
* gnutls_pkcs11_token_set_pin:           PKCS 11 API.        (line  784)
* gnutls_pkcs11_type_get_name:           PKCS 11 API.        (line  804)
* gnutls_pkcs12_bag_decrypt:             PKCS 12 API.        (line   12)
* gnutls_pkcs12_bag_deinit:              PKCS 12 API.        (line   27)
* gnutls_pkcs12_bag_encrypt:             PKCS 12 API.        (line   35)
* gnutls_pkcs12_bag_get_count:           PKCS 12 API.        (line   52)
* gnutls_pkcs12_bag_get_data:            PKCS 12 API.        (line   64)
* gnutls_pkcs12_bag_get_friendly_name:   PKCS 12 API.        (line   82)
* gnutls_pkcs12_bag_get_key_id:          PKCS 12 API.        (line  101)
* gnutls_pkcs12_bag_get_type:            PKCS 12 API.        (line  120)
* gnutls_pkcs12_bag_init:                PKCS 12 API.        (line  133)
* gnutls_pkcs12_bag_set_crl:             PKCS 12 API.        (line  146)
* gnutls_pkcs12_bag_set_crt:             PKCS 12 API.        (line  161)
* gnutls_pkcs12_bag_set_data:            PKCS 12 API.        (line  176)
* gnutls_pkcs12_bag_set_friendly_name:   PKCS 12 API.        (line  193)
* gnutls_pkcs12_bag_set_key_id:          PKCS 12 API.        (line  213)
* gnutls_pkcs12_deinit:                  PKCS 12 API.        (line  233)
* gnutls_pkcs12_export:                  PKCS 12 API.        (line  241)
* gnutls_pkcs12_export2:                 PKCS 12 API.        (line  269)
* gnutls_pkcs12_generate_mac:            PKCS 12 API.        (line  293)
* gnutls_pkcs12_get_bag:                 PKCS 12 API.        (line  307)
* gnutls_pkcs12_import:                  PKCS 12 API.        (line  327)
* gnutls_pkcs12_init:                    PKCS 12 API.        (line  350)
* gnutls_pkcs12_set_bag:                 PKCS 12 API.        (line  363)
* gnutls_pkcs12_simple_parse:            Managing encrypted keys.
                                                             (line  143)
* gnutls_pkcs12_simple_parse <1>:        PKCS 12 API.        (line  377)
* gnutls_pkcs12_verify_mac:              PKCS 12 API.        (line  444)
* gnutls_pkcs7_deinit:                   X509 certificate API.
                                                             (line   36)
* gnutls_pkcs7_delete_crl:               X509 certificate API.
                                                             (line   44)
* gnutls_pkcs7_delete_crt:               X509 certificate API.
                                                             (line   59)
* gnutls_pkcs7_export:                   X509 certificate API.
                                                             (line   74)
* gnutls_pkcs7_export2:                  X509 certificate API.
                                                             (line  101)
* gnutls_pkcs7_get_crl_count:            X509 certificate API.
                                                             (line  124)
* gnutls_pkcs7_get_crl_raw:              X509 certificate API.
                                                             (line  136)
* gnutls_pkcs7_get_crt_count:            X509 certificate API.
                                                             (line  157)
* gnutls_pkcs7_get_crt_raw:              X509 certificate API.
                                                             (line  169)
* gnutls_pkcs7_import:                   X509 certificate API.
                                                             (line  194)
* gnutls_pkcs7_init:                     X509 certificate API.
                                                             (line  214)
* gnutls_pkcs7_set_crl:                  X509 certificate API.
                                                             (line  227)
* gnutls_pkcs7_set_crl_raw:              X509 certificate API.
                                                             (line  242)
* gnutls_pkcs7_set_crt:                  X509 certificate API.
                                                             (line  256)
* gnutls_pkcs7_set_crt_raw:              X509 certificate API.
                                                             (line  272)
* gnutls_pk_algorithm_get_name:          Core TLS API.       (line 3094)
* gnutls_pk_bits_to_sec_param:           Selecting cryptographic key sizes.
                                                             (line   80)
* gnutls_pk_bits_to_sec_param <1>:       Core TLS API.       (line 3106)
* gnutls_pk_get_id:                      Core TLS API.       (line 3123)
* gnutls_pk_get_name:                    Core TLS API.       (line 3138)
* gnutls_pk_list:                        Core TLS API.       (line 3152)
* gnutls_pk_to_sign:                     Core TLS API.       (line 3166)
* gnutls_prf:                            Core TLS API.       (line 3181)
* gnutls_prf_raw:                        Core TLS API.       (line 3224)
* gnutls_priority_certificate_type_list: Core TLS API.       (line 3263)
* gnutls_priority_cipher_list:           Core TLS API.       (line 3279)
* gnutls_priority_compression_list:      Core TLS API.       (line 3294)
* gnutls_priority_deinit:                Core TLS API.       (line 3310)
* gnutls_priority_ecc_curve_list:        Core TLS API.       (line 3319)
* gnutls_priority_get_cipher_suite_index: Core TLS API.      (line 3334)
* gnutls_priority_init:                  Core TLS API.       (line 3357)
* gnutls_priority_kx_list:               Core TLS API.       (line 3437)
* gnutls_priority_mac_list:              Core TLS API.       (line 3453)
* gnutls_priority_protocol_list:         Core TLS API.       (line 3468)
* gnutls_priority_set:                   Core TLS API.       (line 3484)
* gnutls_priority_set_direct:            Core TLS API.       (line 3498)
* gnutls_priority_sign_list:             Core TLS API.       (line 3519)
* gnutls_privkey_decrypt_data:           Operations.         (line  130)
* gnutls_privkey_decrypt_data <1>:       Abstract key API.   (line  227)
* gnutls_privkey_deinit:                 Abstract key API.   (line  250)
* gnutls_privkey_get_pk_algorithm:       Abstract key API.   (line  260)
* gnutls_privkey_get_type:               Abstract key API.   (line  279)
* gnutls_privkey_import_ext:             Abstract key API.   (line  294)
* gnutls_privkey_import_ext2:            Abstract private keys.
                                                             (line   48)
* gnutls_privkey_import_ext2 <1>:        Abstract key API.   (line  324)
* gnutls_privkey_import_openpgp:         Abstract key API.   (line  361)
* gnutls_privkey_import_openpgp_raw:     Abstract key API.   (line  388)
* gnutls_privkey_import_pkcs11:          Abstract key API.   (line  413)
* gnutls_privkey_import_pkcs11_url:      Abstract key API.   (line  439)
* gnutls_privkey_import_tpm_raw:         Abstract key API.   (line  456)
* gnutls_privkey_import_tpm_url:         Using keys.         (line   16)
* gnutls_privkey_import_tpm_url <1>:     Abstract key API.   (line  486)
* gnutls_privkey_import_url:             Abstract private keys.
                                                             (line   23)
* gnutls_privkey_import_url <1>:         Abstract key API.   (line  517)
* gnutls_privkey_import_x509:            Abstract key API.   (line  537)
* gnutls_privkey_import_x509_raw:        Managing encrypted keys.
                                                             (line   27)
* gnutls_privkey_import_x509_raw <1>:    Abstract key API.   (line  563)
* gnutls_privkey_init:                   Abstract key API.   (line  590)
* gnutls_privkey_set_pin_function:       Abstract key API.   (line  603)
* gnutls_privkey_sign_data:              Operations.         (line   71)
* gnutls_privkey_sign_data <1>:          Abstract key API.   (line  623)
* gnutls_privkey_sign_hash:              Operations.         (line   99)
* gnutls_privkey_sign_hash <1>:          Abstract key API.   (line  654)
* gnutls_privkey_sign_raw_data:          Compatibility API.  (line  212)
* gnutls_privkey_status:                 Abstract key API.   (line  688)
* gnutls_protocol_get_id:                Core TLS API.       (line 3535)
* gnutls_protocol_get_name:              Core TLS API.       (line 3547)
* gnutls_protocol_get_version:           Core TLS API.       (line 3559)
* gnutls_protocol_list:                  Core TLS API.       (line 3570)
* gnutls_protocol_set_priority:          Compatibility API.  (line  243)
* gnutls_psk_allocate_client_credentials: Core TLS API.      (line 3582)
* gnutls_psk_allocate_server_credentials: Core TLS API.      (line 3595)
* gnutls_psk_client_get_hint:            Core TLS API.       (line 3608)
* gnutls_psk_free_client_credentials:    Core TLS API.       (line 3624)
* gnutls_psk_free_server_credentials:    Core TLS API.       (line 3634)
* gnutls_psk_server_get_username:        Core TLS API.       (line 3644)
* gnutls_psk_set_client_credentials:     Core TLS API.       (line 3656)
* gnutls_psk_set_client_credentials_function: PSK credentials.
                                                             (line   22)
* gnutls_psk_set_client_credentials_function <1>: Core TLS API.
                                                             (line 3681)
* gnutls_psk_set_params_function:        Core TLS API.       (line 3705)
* gnutls_psk_set_server_credentials_file: PSK credentials.   (line   58)
* gnutls_psk_set_server_credentials_file <1>: Core TLS API.  (line 3719)
* gnutls_psk_set_server_credentials_function: Core TLS API.  (line 3736)
* gnutls_psk_set_server_credentials_hint: Core TLS API.      (line 3761)
* gnutls_psk_set_server_dh_params:       Core TLS API.       (line 3780)
* gnutls_psk_set_server_params_function: Core TLS API.       (line 3794)
* gnutls_pubkey_deinit:                  Abstract key API.   (line  704)
* gnutls_pubkey_encrypt_data:            Operations.         (line   53)
* gnutls_pubkey_encrypt_data <1>:        Abstract key API.   (line  714)
* gnutls_pubkey_export:                  Abstract key API.   (line  735)
* gnutls_pubkey_export2:                 Abstract public keys.
                                                             (line   20)
* gnutls_pubkey_export2 <1>:             Abstract key API.   (line  766)
* gnutls_pubkey_get_key_id:              Abstract key API.   (line  791)
* gnutls_pubkey_get_key_usage:           Abstract key API.   (line  820)
* gnutls_pubkey_get_openpgp_key_id:      Abstract key API.   (line  837)
* gnutls_pubkey_get_pk_algorithm:        Abstract key API.   (line  870)
* gnutls_pubkey_get_pk_dsa_raw:          Abstract key API.   (line  889)
* gnutls_pubkey_get_pk_ecc_raw:          Abstract key API.   (line  914)
* gnutls_pubkey_get_pk_ecc_x962:         Abstract key API.   (line  937)
* gnutls_pubkey_get_pk_rsa_raw:          Abstract key API.   (line  957)
* gnutls_pubkey_get_preferred_hash_algorithm: Abstract key API.
                                                             (line  977)
* gnutls_pubkey_get_verify_algorithm:    Abstract key API.   (line 1005)
* gnutls_pubkey_import:                  Abstract key API.   (line 1026)
* gnutls_pubkey_import_dsa_raw:          Abstract key API.   (line 1047)
* gnutls_pubkey_import_ecc_raw:          Abstract key API.   (line 1072)
* gnutls_pubkey_import_ecc_x962:         Abstract key API.   (line 1094)
* gnutls_pubkey_import_openpgp:          Abstract key API.   (line 1114)
* gnutls_pubkey_import_openpgp_raw:      Abstract key API.   (line 1135)
* gnutls_pubkey_import_pkcs11:           Abstract key API.   (line 1160)
* gnutls_pubkey_import_pkcs11_url:       Abstract key API.   (line 1179)
* gnutls_pubkey_import_privkey:          Abstract key API.   (line 1198)
* gnutls_pubkey_import_rsa_raw:          Abstract key API.   (line 1219)
* gnutls_pubkey_import_tpm_raw:          Abstract key API.   (line 1239)
* gnutls_pubkey_import_tpm_url:          Using keys.         (line   44)
* gnutls_pubkey_import_tpm_url <1>:      Abstract key API.   (line 1266)
* gnutls_pubkey_import_url:              Abstract key API.   (line 1294)
* gnutls_pubkey_import_x509:             Abstract key API.   (line 1313)
* gnutls_pubkey_import_x509_crq:         Abstract key API.   (line 1332)
* gnutls_pubkey_import_x509_raw:         Abstract key API.   (line 1351)
* gnutls_pubkey_init:                    Abstract key API.   (line 1373)
* gnutls_pubkey_print:                   Abstract key API.   (line 1386)
* gnutls_pubkey_set_key_usage:           Abstract key API.   (line 1411)
* gnutls_pubkey_set_pin_function:        Abstract key API.   (line 1429)
* gnutls_pubkey_verify_data:             Abstract key API.   (line 1449)
* gnutls_pubkey_verify_data2:            Operations.         (line    9)
* gnutls_pubkey_verify_data2 <1>:        Abstract key API.   (line 1475)
* gnutls_pubkey_verify_hash:             Abstract key API.   (line 1500)
* gnutls_pubkey_verify_hash2:            Operations.         (line   31)
* gnutls_pubkey_verify_hash2 <1>:        Abstract key API.   (line 1526)
* gnutls_random_art:                     Core TLS API.       (line 3808)
* gnutls_range_split:                    Core TLS API.       (line 3832)
* gnutls_record_can_use_length_hiding:   Core TLS API.       (line 3858)
* gnutls_record_check_corked:            Core TLS API.       (line 3876)
* gnutls_record_check_pending:           Data transfer and termination.
                                                             (line  131)
* gnutls_record_check_pending <1>:       Core TLS API.       (line 3890)
* gnutls_record_cork:                    Buffered data transfer.
                                                             (line   12)
* gnutls_record_cork <1>:                Core TLS API.       (line 3903)
* gnutls_record_disable_padding:         Core TLS API.       (line 3915)
* gnutls_record_get_direction:           Asynchronous operation.
                                                             (line   40)
* gnutls_record_get_direction <1>:       Core TLS API.       (line 3930)
* gnutls_record_get_discarded:           Datagram TLS API.   (line  212)
* gnutls_record_get_max_size:            Core TLS API.       (line 3950)
* gnutls_record_overhead_size:           Core TLS API.       (line 3962)
* gnutls_record_recv:                    Data transfer and termination.
                                                             (line   44)
* gnutls_record_recv <1>:                Core TLS API.       (line 3974)
* gnutls_record_recv_seq:                Data transfer and termination.
                                                             (line  100)
* gnutls_record_recv_seq <1>:            Core TLS API.       (line 4006)
* gnutls_record_send:                    Data transfer and termination.
                                                             (line   12)
* gnutls_record_send <1>:                Core TLS API.       (line 4033)
* gnutls_record_send_range:              Core TLS API.       (line 4068)
* gnutls_record_set_max_empty_records:   Core TLS API.       (line 4098)
* gnutls_record_set_max_size:            Core TLS API.       (line 4118)
* gnutls_record_set_timeout:             Core TLS API.       (line 4142)
* gnutls_record_uncork:                  Buffered data transfer.
                                                             (line   21)
* gnutls_record_uncork <1>:              Core TLS API.       (line 4161)
* gnutls_rehandshake:                    Core TLS API.       (line 4186)
* gnutls_rnd:                            Random number generation.
                                                             (line   21)
* gnutls_rnd <1>:                        Cryptographic API.  (line  460)
* gnutls_rnd_refresh:                    Cryptographic API.  (line  478)
* gnutls_rsa_export_get_modulus_bits:    Compatibility API.  (line  258)
* gnutls_rsa_export_get_pubkey:          Compatibility API.  (line  270)
* gnutls_rsa_params_cpy:                 Compatibility API.  (line  288)
* gnutls_rsa_params_deinit:              Compatibility API.  (line  303)
* gnutls_rsa_params_export_pkcs1:        Compatibility API.  (line  312)
* gnutls_rsa_params_export_raw:          Compatibility API.  (line  339)
* gnutls_rsa_params_generate2:           Compatibility API.  (line  369)
* gnutls_rsa_params_import_pkcs1:        Compatibility API.  (line  390)
* gnutls_rsa_params_import_raw:          Compatibility API.  (line  412)
* gnutls_rsa_params_init:                Compatibility API.  (line  440)
* gnutls_safe_renegotiation_status:      Core TLS API.       (line 4217)
* gnutls_sec_param_get_name:             Core TLS API.       (line 4232)
* gnutls_sec_param_to_pk_bits:           Selecting cryptographic key sizes.
                                                             (line   64)
* gnutls_sec_param_to_pk_bits <1>:       Core TLS API.       (line 4246)
* gnutls_server_name_get:                Core TLS API.       (line 4265)
* gnutls_server_name_set:                Core TLS API.       (line 4302)
* gnutls_session_channel_binding:        Core TLS API.       (line 4329)
* gnutls_session_enable_compatibility_mode: Core TLS API.    (line 4350)
* gnutls_session_force_valid:            Core TLS API.       (line 4368)
* gnutls_session_get_data:               Core TLS API.       (line 4379)
* gnutls_session_get_data2:              Core TLS API.       (line 4400)
* gnutls_session_get_desc:               Core TLS API.       (line 4419)
* gnutls_session_get_id:                 Core TLS API.       (line 4433)
* gnutls_session_get_id2:                Core TLS API.       (line 4457)
* gnutls_session_get_ptr:                Core TLS API.       (line 4474)
* gnutls_session_get_random:             Core TLS API.       (line 4486)
* gnutls_session_is_resumed:             Session resumption. (line   27)
* gnutls_session_is_resumed <1>:         Core TLS API.       (line 4506)
* gnutls_session_resumption_requested:   Session resumption. (line   88)
* gnutls_session_resumption_requested <1>: Core TLS API.     (line 4517)
* gnutls_session_set_data:               Core TLS API.       (line 4530)
* gnutls_session_set_id:                 Core TLS API.       (line 4553)
* gnutls_session_set_premaster:          Core TLS API.       (line 4572)
* gnutls_session_set_ptr:                Core TLS API.       (line 4607)
* gnutls_session_ticket_enable_client:   Core TLS API.       (line 4620)
* gnutls_session_ticket_enable_server:   Session resumption. (line   60)
* gnutls_session_ticket_enable_server <1>: Core TLS API.     (line 4635)
* gnutls_session_ticket_key_generate:    Session resumption. (line   75)
* gnutls_session_ticket_key_generate <1>: Core TLS API.      (line 4653)
* gnutls_set_default_export_priority:    Compatibility API.  (line  453)
* gnutls_set_default_priority:           Core TLS API.       (line 4669)
* gnutls_sign_algorithm_get:             Core TLS API.       (line 4690)
* gnutls_sign_algorithm_get_client:      Core TLS API.       (line 4703)
* gnutls_sign_algorithm_get_requested:   Core TLS API.       (line 4717)
* gnutls_sign_callback_get:              Compatibility API.  (line  476)
* gnutls_sign_callback_set:              Compatibility API.  (line  492)
* gnutls_sign_get_hash_algorithm:        Core TLS API.       (line 4744)
* gnutls_sign_get_id:                    Core TLS API.       (line 4759)
* gnutls_sign_get_name:                  Core TLS API.       (line 4771)
* gnutls_sign_get_pk_algorithm:          Core TLS API.       (line 4783)
* gnutls_sign_is_secure:                 Core TLS API.       (line 4798)
* gnutls_sign_list:                      Core TLS API.       (line 4808)
* gnutls_srp_allocate_client_credentials: Core TLS API.      (line 4818)
* gnutls_srp_allocate_server_credentials: Core TLS API.      (line 4831)
* gnutls_srp_base64_decode:              Core TLS API.       (line 4844)
* gnutls_srp_base64_decode_alloc:        Core TLS API.       (line 4866)
* gnutls_srp_base64_encode:              Core TLS API.       (line 4886)
* gnutls_srp_base64_encode_alloc:        Core TLS API.       (line 4908)
* gnutls_srp_free_client_credentials:    Core TLS API.       (line 4929)
* gnutls_srp_free_server_credentials:    Core TLS API.       (line 4939)
* gnutls_srp_server_get_username:        Core TLS API.       (line 4949)
* gnutls_srp_set_client_credentials:     Core TLS API.       (line 4962)
* gnutls_srp_set_client_credentials_function: SRP credentials.
                                                             (line   19)
* gnutls_srp_set_client_credentials_function <1>: Core TLS API.
                                                             (line 4983)
* gnutls_srp_set_prime_bits:             Core TLS API.       (line 5013)
* gnutls_srp_set_server_credentials_file: SRP credentials.   (line   53)
* gnutls_srp_set_server_credentials_file <1>: Core TLS API.  (line 5034)
* gnutls_srp_set_server_credentials_function: SRP credentials.
                                                             (line   70)
* gnutls_srp_set_server_credentials_function <1>: Core TLS API.
                                                             (line 5054)
* gnutls_srp_verifier:                   Authentication using SRP.
                                                             (line   43)
* gnutls_srp_verifier <1>:               Core TLS API.       (line 5088)
* gnutls_srtp_get_keys:                  SRTP.               (line   31)
* gnutls_srtp_get_keys <1>:              Core TLS API.       (line 5117)
* gnutls_srtp_get_mki:                   Core TLS API.       (line 5155)
* gnutls_srtp_get_profile_id:            Core TLS API.       (line 5173)
* gnutls_srtp_get_profile_name:          Core TLS API.       (line 5189)
* gnutls_srtp_get_selected_profile:      Core TLS API.       (line 5204)
* gnutls_srtp_set_mki:                   Core TLS API.       (line 5220)
* gnutls_srtp_set_profile:               Core TLS API.       (line 5237)
* gnutls_srtp_set_profile_direct:        Core TLS API.       (line 5254)
* gnutls_store_commitment:               Certificate verification.
                                                             (line   99)
* gnutls_store_commitment <1>:           Core TLS API.       (line 5275)
* gnutls_store_pubkey:                   Certificate verification.
                                                             (line   61)
* gnutls_store_pubkey <1>:               Core TLS API.       (line 5315)
* gnutls_strerror:                       Core TLS API.       (line 5352)
* gnutls_strerror_name:                  Core TLS API.       (line 5366)
* gnutls_supplemental_get_name:          Core TLS API.       (line 5381)
* gnutls_tdb_deinit:                     Core TLS API.       (line 5394)
* gnutls_tdb_init:                       Core TLS API.       (line 5403)
* gnutls_tdb_set_store_commitment_func:  Core TLS API.       (line 5414)
* gnutls_tdb_set_store_func:             Core TLS API.       (line 5431)
* gnutls_tdb_set_verify_func:            Core TLS API.       (line 5446)
* gnutls_tpm_get_registered:             TPM API.            (line   12)
* gnutls_tpm_key_list_deinit:            TPM API.            (line   27)
* gnutls_tpm_key_list_get_url:           TPM API.            (line   38)
* gnutls_tpm_privkey_delete:             Key generation.     (line   52)
* gnutls_tpm_privkey_delete <1>:         Using keys.         (line   82)
* gnutls_tpm_privkey_delete <2>:         TPM API.            (line   60)
* gnutls_tpm_privkey_generate:           Key generation.     (line    9)
* gnutls_tpm_privkey_generate <1>:       TPM API.            (line   76)
* gnutls_transport_get_int:              Core TLS API.       (line 5461)
* gnutls_transport_get_int2:             Core TLS API.       (line 5475)
* gnutls_transport_get_ptr:              Core TLS API.       (line 5492)
* gnutls_transport_get_ptr2:             Core TLS API.       (line 5505)
* gnutls_transport_set_errno:            Setting up the transport layer.
                                                             (line  101)
* gnutls_transport_set_errno <1>:        Core TLS API.       (line 5521)
* gnutls_transport_set_errno_function:   Core TLS API.       (line 5541)
* gnutls_transport_set_int:              Core TLS API.       (line 5559)
* gnutls_transport_set_int2:             Core TLS API.       (line 5573)
* gnutls_transport_set_ptr:              Core TLS API.       (line 5591)
* gnutls_transport_set_ptr2:             Core TLS API.       (line 5604)
* gnutls_transport_set_pull_function:    Setting up the transport layer.
                                                             (line   56)
* gnutls_transport_set_pull_function <1>: Core TLS API.      (line 5621)
* gnutls_transport_set_pull_timeout_function: Setting up the transport layer.
                                                             (line   71)
* gnutls_transport_set_pull_timeout_function <1>: Setting up the transport layer.
                                                             (line  138)
* gnutls_transport_set_pull_timeout_function <2>: Core TLS API.
                                                             (line 5639)
* gnutls_transport_set_push_function:    Setting up the transport layer.
                                                             (line   23)
* gnutls_transport_set_push_function <1>: Core TLS API.      (line 5664)
* gnutls_transport_set_vec_push_function: Setting up the transport layer.
                                                             (line   40)
* gnutls_transport_set_vec_push_function <1>: Core TLS API.  (line 5684)
* gnutls_url_is_supported:               Abstract public keys.
                                                             (line   54)
* gnutls_url_is_supported <1>:           Core TLS API.       (line 5703)
* gnutls_verify_stored_pubkey:           Certificate verification.
                                                             (line   18)
* gnutls_verify_stored_pubkey <1>:       Core TLS API.       (line 5717)
* gnutls_x509_crl_check_issuer:          X509 certificate API.
                                                             (line  287)
* gnutls_x509_crl_deinit:                X509 certificate API.
                                                             (line  302)
* gnutls_x509_crl_export:                X509 certificate API.
                                                             (line  310)
* gnutls_x509_crl_export2:               X509 certificate API.
                                                             (line  337)
* gnutls_x509_crl_get_authority_key_gn_serial: X509 certificate API.
                                                             (line  361)
* gnutls_x509_crl_get_authority_key_id:  X509 certificate API.
                                                             (line  398)
* gnutls_x509_crl_get_crt_count:         X509 certificate API.
                                                             (line  426)
* gnutls_x509_crl_get_crt_serial:        PKIX certificate revocation lists.
                                                             (line   55)
* gnutls_x509_crl_get_crt_serial <1>:    X509 certificate API.
                                                             (line  438)
* gnutls_x509_crl_get_dn_oid:            X509 certificate API.
                                                             (line  461)
* gnutls_x509_crl_get_extension_data:    X509 certificate API.
                                                             (line  484)
* gnutls_x509_crl_get_extension_info:    X509 certificate API.
                                                             (line  514)
* gnutls_x509_crl_get_extension_oid:     X509 certificate API.
                                                             (line  548)
* gnutls_x509_crl_get_issuer_dn:         X509 certificate API.
                                                             (line  573)
* gnutls_x509_crl_get_issuer_dn2:        X509 certificate API.
                                                             (line  595)
* gnutls_x509_crl_get_issuer_dn_by_oid:  X509 certificate API.
                                                             (line  615)
* gnutls_x509_crl_get_next_update:       X509 certificate API.
                                                             (line  651)
* gnutls_x509_crl_get_number:            X509 certificate API.
                                                             (line  665)
* gnutls_x509_crl_get_raw_issuer_dn:     X509 certificate API.
                                                             (line  687)
* gnutls_x509_crl_get_signature:         X509 certificate API.
                                                             (line  703)
* gnutls_x509_crl_get_signature_algorithm: X509 certificate API.
                                                             (line  721)
* gnutls_x509_crl_get_this_update:       X509 certificate API.
                                                             (line  734)
* gnutls_x509_crl_get_version:           X509 certificate API.
                                                             (line  745)
* gnutls_x509_crl_import:                X509 certificate API.
                                                             (line  755)
* gnutls_x509_crl_init:                  X509 certificate API.
                                                             (line  775)
* gnutls_x509_crl_list_import:           X509 certificate API.
                                                             (line  790)
* gnutls_x509_crl_list_import2:          X509 certificate API.
                                                             (line  821)
* gnutls_x509_crl_print:                 X509 certificate API.
                                                             (line  851)
* gnutls_x509_crl_privkey_sign:          PKIX certificate revocation lists.
                                                             (line  121)
* gnutls_x509_crl_privkey_sign <1>:      Abstract key API.   (line 1551)
* gnutls_x509_crl_set_authority_key_id:  X509 certificate API.
                                                             (line  871)
* gnutls_x509_crl_set_crt:               X509 certificate API.
                                                             (line  892)
* gnutls_x509_crl_set_crt_serial:        X509 certificate API.
                                                             (line  910)
* gnutls_x509_crl_set_next_update:       X509 certificate API.
                                                             (line  930)
* gnutls_x509_crl_set_number:            X509 certificate API.
                                                             (line  944)
* gnutls_x509_crl_set_this_update:       X509 certificate API.
                                                             (line  964)
* gnutls_x509_crl_set_version:           X509 certificate API.
                                                             (line  978)
* gnutls_x509_crl_sign:                  Compatibility API.  (line  517)
* gnutls_x509_crl_sign2:                 PKIX certificate revocation lists.
                                                             (line   98)
* gnutls_x509_crl_sign2 <1>:             X509 certificate API.
                                                             (line  994)
* gnutls_x509_crl_verify:                X509 certificate API.
                                                             (line 1020)
* gnutls_x509_crq_deinit:                X509 certificate API.
                                                             (line 1050)
* gnutls_x509_crq_export:                X509 certificate API.
                                                             (line 1059)
* gnutls_x509_crq_export2:               X509 certificate API.
                                                             (line 1087)
* gnutls_x509_crq_get_attribute_by_oid:  X509 certificate API.
                                                             (line 1111)
* gnutls_x509_crq_get_attribute_data:    X509 certificate API.
                                                             (line 1140)
* gnutls_x509_crq_get_attribute_info:    X509 certificate API.
                                                             (line 1169)
* gnutls_x509_crq_get_basic_constraints: X509 certificate API.
                                                             (line 1200)
* gnutls_x509_crq_get_challenge_password: X509 certificate API.
                                                             (line 1230)
* gnutls_x509_crq_get_dn:                X509 certificate API.
                                                             (line 1248)
* gnutls_x509_crq_get_dn2:               X509 certificate API.
                                                             (line 1269)
* gnutls_x509_crq_get_dn_by_oid:         X509 certificate API.
                                                             (line 1289)
* gnutls_x509_crq_get_dn_oid:            X509 certificate API.
                                                             (line 1323)
* gnutls_x509_crq_get_extension_by_oid:  X509 certificate API.
                                                             (line 1343)
* gnutls_x509_crq_get_extension_data:    X509 certificate API.
                                                             (line 1373)
* gnutls_x509_crq_get_extension_info:    X509 certificate API.
                                                             (line 1403)
* gnutls_x509_crq_get_key_id:            X509 certificate API.
                                                             (line 1437)
* gnutls_x509_crq_get_key_purpose_oid:   X509 certificate API.
                                                             (line 1466)
* gnutls_x509_crq_get_key_rsa_raw:       X509 certificate API.
                                                             (line 1494)
* gnutls_x509_crq_get_key_usage:         X509 certificate API.
                                                             (line 1514)
* gnutls_x509_crq_get_pk_algorithm:      X509 certificate API.
                                                             (line 1540)
* gnutls_x509_crq_get_private_key_usage_period: X509 certificate API.
                                                             (line 1560)
* gnutls_x509_crq_get_subject_alt_name:  X509 certificate API.
                                                             (line 1581)
* gnutls_x509_crq_get_subject_alt_othername_oid: X509 certificate API.
                                                             (line 1618)
* gnutls_x509_crq_get_version:           X509 certificate API.
                                                             (line 1654)
* gnutls_x509_crq_import:                X509 certificate API.
                                                             (line 1666)
* gnutls_x509_crq_init:                  X509 certificate API.
                                                             (line 1687)
* gnutls_x509_crq_print:                 X509 certificate API.
                                                             (line 1699)
* gnutls_x509_crq_privkey_sign:          Abstract key API.   (line 1579)
* gnutls_x509_crq_set_attribute_by_oid:  X509 certificate API.
                                                             (line 1721)
* gnutls_x509_crq_set_basic_constraints: X509 certificate API.
                                                             (line 1746)
* gnutls_x509_crq_set_challenge_password: X509 certificate API.
                                                             (line 1768)
* gnutls_x509_crq_set_dn:                X509 certificate API.
                                                             (line 1783)
* gnutls_x509_crq_set_dn_by_oid:         X509 certificate API.
                                                             (line 1800)
* gnutls_x509_crq_set_key:               PKCS 10 certificate requests.
                                                             (line   30)
* gnutls_x509_crq_set_key <1>:           X509 certificate API.
                                                             (line 1829)
* gnutls_x509_crq_set_key_purpose_oid:   X509 certificate API.
                                                             (line 1844)
* gnutls_x509_crq_set_key_rsa_raw:       X509 certificate API.
                                                             (line 1866)
* gnutls_x509_crq_set_key_usage:         X509 certificate API.
                                                             (line 1885)
* gnutls_x509_crq_set_private_key_usage_period: X509 certificate API.
                                                             (line 1901)
* gnutls_x509_crq_set_pubkey:            Operations.         (line  154)
* gnutls_x509_crq_set_pubkey <1>:        Abstract key API.   (line 1608)
* gnutls_x509_crq_set_subject_alt_name:  X509 certificate API.
                                                             (line 1918)
* gnutls_x509_crq_set_version:           X509 certificate API.
                                                             (line 1943)
* gnutls_x509_crq_sign:                  Compatibility API.  (line  536)
* gnutls_x509_crq_sign2:                 PKCS 10 certificate requests.
                                                             (line   42)
* gnutls_x509_crq_sign2 <1>:             X509 certificate API.
                                                             (line 1958)
* gnutls_x509_crq_verify:                X509 certificate API.
                                                             (line 1985)
* gnutls_x509_crt_check_hostname:        X509 certificate API.
                                                             (line 2004)
* gnutls_x509_crt_check_issuer:          X509 certificate API.
                                                             (line 2020)
* gnutls_x509_crt_check_revocation:      X509 certificate API.
                                                             (line 2036)
* gnutls_x509_crt_cpy_crl_dist_points:   X509 certificate API.
                                                             (line 2053)
* gnutls_x509_crt_deinit:                X509 certificate API.
                                                             (line 2069)
* gnutls_x509_crt_export:                X509 certificate API.
                                                             (line 2077)
* gnutls_x509_crt_export2:               X509 certificate API.
                                                             (line 2104)
* gnutls_x509_crt_get_activation_time:   X509 certificate API.
                                                             (line 2126)
* gnutls_x509_crt_get_authority_info_access: X509 certificate API.
                                                             (line 2138)
* gnutls_x509_crt_get_authority_key_gn_serial: X509 certificate API.
                                                             (line 2215)
* gnutls_x509_crt_get_authority_key_id:  X509 certificate API.
                                                             (line 2254)
* gnutls_x509_crt_get_basic_constraints: X509 certificate API.
                                                             (line 2281)
* gnutls_x509_crt_get_ca_status:         X509 certificate API.
                                                             (line 2309)
* gnutls_x509_crt_get_crl_dist_points:   X509 certificate API.
                                                             (line 2330)
* gnutls_x509_crt_get_dn:                X509 certificate API.
                                                             (line 2363)
* gnutls_x509_crt_get_dn2:               X.509 distinguished names.
                                                             (line   14)
* gnutls_x509_crt_get_dn2 <1>:           X509 certificate API.
                                                             (line 2385)
* gnutls_x509_crt_get_dn_by_oid:         X509 certificate API.
                                                             (line 2405)
* gnutls_x509_crt_get_dn_oid:            X509 certificate API.
                                                             (line 2444)
* gnutls_x509_crt_get_expiration_time:   X509 certificate API.
                                                             (line 2470)
* gnutls_x509_crt_get_extension_by_oid:  X509 certificate API.
                                                             (line 2485)
* gnutls_x509_crt_get_extension_data:    X509 certificate API.
                                                             (line 2513)
* gnutls_x509_crt_get_extension_info:    X509 certificate API.
                                                             (line 2541)
* gnutls_x509_crt_get_extension_oid:     X509 certificate API.
                                                             (line 2574)
* gnutls_x509_crt_get_fingerprint:       X509 certificate API.
                                                             (line 2600)
* gnutls_x509_crt_get_issuer:            X509 certificate API.
                                                             (line 2623)
* gnutls_x509_crt_get_issuer_alt_name:   X509 certificate API.
                                                             (line 2641)
* gnutls_x509_crt_get_issuer_alt_name2:  X509 certificate API.
                                                             (line 2684)
* gnutls_x509_crt_get_issuer_alt_othername_oid: X509 certificate API.
                                                             (line 2722)
* gnutls_x509_crt_get_issuer_dn:         X509 certificate API.
                                                             (line 2762)
* gnutls_x509_crt_get_issuer_dn2:        X509 certificate API.
                                                             (line 2784)
* gnutls_x509_crt_get_issuer_dn_by_oid:  X509 certificate API.
                                                             (line 2804)
* gnutls_x509_crt_get_issuer_dn_oid:     X509 certificate API.
                                                             (line 2843)
* gnutls_x509_crt_get_issuer_unique_id:  X509 certificate API.
                                                             (line 2869)
* gnutls_x509_crt_get_key_id:            X.509 public and private keys.
                                                             (line   13)
* gnutls_x509_crt_get_key_id <1>:        X509 certificate API.
                                                             (line 2893)
* gnutls_x509_crt_get_key_purpose_oid:   X509 certificate API.
                                                             (line 2920)
* gnutls_x509_crt_get_key_usage:         X509 certificate API.
                                                             (line 2950)
* gnutls_x509_crt_get_pk_algorithm:      X509 certificate API.
                                                             (line 2974)
* gnutls_x509_crt_get_pk_dsa_raw:        X509 certificate API.
                                                             (line 2994)
* gnutls_x509_crt_get_pk_rsa_raw:        X509 certificate API.
                                                             (line 3017)
* gnutls_x509_crt_get_policy:            X509 certificate API.
                                                             (line 3035)
* gnutls_x509_crt_get_preferred_hash_algorithm: Compatibility API.
                                                             (line  553)
* gnutls_x509_crt_get_private_key_usage_period: X509 certificate API.
                                                             (line 3062)
* gnutls_x509_crt_get_proxy:             X509 certificate API.
                                                             (line 3084)
* gnutls_x509_crt_get_raw_dn:            X509 certificate API.
                                                             (line 3111)
* gnutls_x509_crt_get_raw_issuer_dn:     X509 certificate API.
                                                             (line 3128)
* gnutls_x509_crt_get_serial:            X509 certificate API.
                                                             (line 3144)
* gnutls_x509_crt_get_signature:         X509 certificate API.
                                                             (line 3164)
* gnutls_x509_crt_get_signature_algorithm: X509 certificate API.
                                                             (line 3182)
* gnutls_x509_crt_get_subject:           X509 certificate API.
                                                             (line 3196)
* gnutls_x509_crt_get_subject_alt_name:  X509 certificate API.
                                                             (line 3214)
* gnutls_x509_crt_get_subject_alt_name2: X509 certificate API.
                                                             (line 3254)
* gnutls_x509_crt_get_subject_alt_othername_oid: X509 certificate API.
                                                             (line 3290)
* gnutls_x509_crt_get_subject_key_id:    X509 certificate API.
                                                             (line 3328)
* gnutls_x509_crt_get_subject_unique_id: X509 certificate API.
                                                             (line 3350)
* gnutls_x509_crt_get_verify_algorithm:  Compatibility API.  (line  580)
* gnutls_x509_crt_get_version:           X509 certificate API.
                                                             (line 3372)
* gnutls_x509_crt_import:                X509 certificate API.
                                                             (line 3383)
* gnutls_x509_crt_import_pkcs11:         PKCS 11 API.        (line  820)
* gnutls_x509_crt_import_pkcs11_url:     PKCS 11 API.        (line  837)
* gnutls_x509_crt_init:                  X509 certificate API.
                                                             (line 3404)
* gnutls_x509_crt_list_import:           X509 certificate API.
                                                             (line 3415)
* gnutls_x509_crt_list_import2:          X509 certificate API.
                                                             (line 3451)
* gnutls_x509_crt_list_import_pkcs11:    PKCS 11 API.        (line  857)
* gnutls_x509_crt_list_verify:           X509 certificate API.
                                                             (line 3481)
* gnutls_x509_crt_print:                 X509 certificate API.
                                                             (line 3523)
* gnutls_x509_crt_privkey_sign:          Abstract key API.   (line 1625)
* gnutls_x509_crt_set_activation_time:   X509 certificate API.
                                                             (line 3548)
* gnutls_x509_crt_set_authority_info_access: X509 certificate API.
                                                             (line 3563)
* gnutls_x509_crt_set_authority_key_id:  X509 certificate API.
                                                             (line 3589)
* gnutls_x509_crt_set_basic_constraints: X509 certificate API.
                                                             (line 3607)
* gnutls_x509_crt_set_ca_status:         X509 certificate API.
                                                             (line 3627)
* gnutls_x509_crt_set_crl_dist_points:   X509 certificate API.
                                                             (line 3644)
* gnutls_x509_crt_set_crl_dist_points2:  X509 certificate API.
                                                             (line 3664)
* gnutls_x509_crt_set_crq:               X509 certificate API.
                                                             (line 3689)
* gnutls_x509_crt_set_crq_extensions:    X509 certificate API.
                                                             (line 3705)
* gnutls_x509_crt_set_dn:                X509 certificate API.
                                                             (line 3722)
* gnutls_x509_crt_set_dn_by_oid:         X509 certificate API.
                                                             (line 3739)
* gnutls_x509_crt_set_expiration_time:   X509 certificate API.
                                                             (line 3768)
* gnutls_x509_crt_set_extension_by_oid:  X509 certificate API.
                                                             (line 3785)
* gnutls_x509_crt_set_issuer_dn:         X509 certificate API.
                                                             (line 3809)
* gnutls_x509_crt_set_issuer_dn_by_oid:  X509 certificate API.
                                                             (line 3826)
* gnutls_x509_crt_set_key:               X509 certificate API.
                                                             (line 3859)
* gnutls_x509_crt_set_key_purpose_oid:   X509 certificate API.
                                                             (line 3874)
* gnutls_x509_crt_set_key_usage:         X509 certificate API.
                                                             (line 3894)
* gnutls_x509_crt_set_pin_function:      X509 certificate API.
                                                             (line 3908)
* gnutls_x509_crt_set_policy:            X509 certificate API.
                                                             (line 3929)
* gnutls_x509_crt_set_private_key_usage_period: X509 certificate API.
                                                             (line 3952)
* gnutls_x509_crt_set_proxy:             X509 certificate API.
                                                             (line 3969)
* gnutls_x509_crt_set_proxy_dn:          X509 certificate API.
                                                             (line 3992)
* gnutls_x509_crt_set_pubkey:            Operations.         (line  168)
* gnutls_x509_crt_set_pubkey <1>:        Abstract key API.   (line 1650)
* gnutls_x509_crt_set_serial:            X509 certificate API.
                                                             (line 4018)
* gnutls_x509_crt_set_subject_alternative_name: X509 certificate API.
                                                             (line 4040)
* gnutls_x509_crt_set_subject_alt_name:  X509 certificate API.
                                                             (line 4062)
* gnutls_x509_crt_set_subject_key_id:    X509 certificate API.
                                                             (line 4087)
* gnutls_x509_crt_set_version:           X509 certificate API.
                                                             (line 4104)
* gnutls_x509_crt_sign:                  X509 certificate API.
                                                             (line 4126)
* gnutls_x509_crt_sign2:                 X509 certificate API.
                                                             (line 4143)
* gnutls_x509_crt_verify:                X509 certificate API.
                                                             (line 4168)
* gnutls_x509_crt_verify_data:           Compatibility API.  (line  603)
* gnutls_x509_crt_verify_hash:           Compatibility API.  (line  627)
* gnutls_x509_dn_deinit:                 X509 certificate API.
                                                             (line 4192)
* gnutls_x509_dn_export:                 X509 certificate API.
                                                             (line 4203)
* gnutls_x509_dn_export2:                X509 certificate API.
                                                             (line 4230)
* gnutls_x509_dn_get_rdn_ava:            X.509 distinguished names.
                                                             (line   50)
* gnutls_x509_dn_get_rdn_ava <1>:        X509 certificate API.
                                                             (line 4253)
* gnutls_x509_dn_import:                 X509 certificate API.
                                                             (line 4284)
* gnutls_x509_dn_init:                   X509 certificate API.
                                                             (line 4303)
* gnutls_x509_dn_oid_known:              X509 certificate API.
                                                             (line 4319)
* gnutls_x509_dn_oid_name:               X509 certificate API.
                                                             (line 4335)
* gnutls_x509_policy_release:            X509 certificate API.
                                                             (line 4352)
* gnutls_x509_privkey_cpy:               X509 certificate API.
                                                             (line 4365)
* gnutls_x509_privkey_deinit:            X509 certificate API.
                                                             (line 4380)
* gnutls_x509_privkey_export:            X509 certificate API.
                                                             (line 4389)
* gnutls_x509_privkey_export2:           X509 certificate API.
                                                             (line 4418)
* gnutls_x509_privkey_export2_pkcs8:     X509 certificate API.
                                                             (line 4443)
* gnutls_x509_privkey_export_dsa_raw:    X509 certificate API.
                                                             (line 4479)
* gnutls_x509_privkey_export_ecc_raw:    X509 certificate API.
                                                             (line 4505)
* gnutls_x509_privkey_export_pkcs8:      X509 certificate API.
                                                             (line 4530)
* gnutls_x509_privkey_export_rsa_raw:    X509 certificate API.
                                                             (line 4569)
* gnutls_x509_privkey_export_rsa_raw2:   X509 certificate API.
                                                             (line 4597)
* gnutls_x509_privkey_fix:               X509 certificate API.
                                                             (line 4632)
* gnutls_x509_privkey_generate:          X509 certificate API.
                                                             (line 4644)
* gnutls_x509_privkey_get_key_id:        X509 certificate API.
                                                             (line 4671)
* gnutls_x509_privkey_get_pk_algorithm:  X509 certificate API.
                                                             (line 4698)
* gnutls_x509_privkey_get_pk_algorithm2: X509 certificate API.
                                                             (line 4711)
* gnutls_x509_privkey_import:            X509 certificate API.
                                                             (line 4726)
* gnutls_x509_privkey_import2:           Managing encrypted keys.
                                                             (line   51)
* gnutls_x509_privkey_import2 <1>:       X509 certificate API.
                                                             (line 4748)
* gnutls_x509_privkey_import_dsa_raw:    X509 certificate API.
                                                             (line 4777)
* gnutls_x509_privkey_import_ecc_raw:    X509 certificate API.
                                                             (line 4803)
* gnutls_x509_privkey_import_openssl:    Managing encrypted keys.
                                                             (line  232)
* gnutls_x509_privkey_import_openssl <1>: X509 certificate API.
                                                             (line 4829)
* gnutls_x509_privkey_import_pkcs8:      X509 certificate API.
                                                             (line 4853)
* gnutls_x509_privkey_import_rsa_raw:    X509 certificate API.
                                                             (line 4890)
* gnutls_x509_privkey_import_rsa_raw2:   X509 certificate API.
                                                             (line 4919)
* gnutls_x509_privkey_init:              X509 certificate API.
                                                             (line 4953)
* gnutls_x509_privkey_sec_param:         X509 certificate API.
                                                             (line 4964)
* gnutls_x509_privkey_sign_data:         Compatibility API.  (line  651)
* gnutls_x509_privkey_sign_hash:         Compatibility API.  (line  688)
* gnutls_x509_privkey_verify_params:     X509 certificate API.
                                                             (line 4979)
* gnutls_x509_rdn_get:                   X509 certificate API.
                                                             (line 4991)
* gnutls_x509_rdn_get_by_oid:            X509 certificate API.
                                                             (line 5011)
* gnutls_x509_rdn_get_oid:               X509 certificate API.
                                                             (line 5039)
* gnutls_x509_trust_list_add_cas:        Verifying X.509 certificate paths.
                                                             (line    9)
* gnutls_x509_trust_list_add_cas <1>:    X509 certificate API.
                                                             (line 5062)
* gnutls_x509_trust_list_add_crls:       Verifying X.509 certificate paths.
                                                             (line   58)
* gnutls_x509_trust_list_add_crls <1>:   X509 certificate API.
                                                             (line 5084)
* gnutls_x509_trust_list_add_named_crt:  Verifying X.509 certificate paths.
                                                             (line   28)
* gnutls_x509_trust_list_add_named_crt <1>: X509 certificate API.
                                                             (line 5115)
* gnutls_x509_trust_list_add_system_trust: Verifying X.509 certificate paths.
                                                             (line  194)
* gnutls_x509_trust_list_add_system_trust <1>: X509 certificate API.
                                                             (line 5148)
* gnutls_x509_trust_list_add_trust_file: Verifying X.509 certificate paths.
                                                             (line  145)
* gnutls_x509_trust_list_add_trust_file <1>: X509 certificate API.
                                                             (line 5170)
* gnutls_x509_trust_list_add_trust_mem:  Verifying X.509 certificate paths.
                                                             (line  170)
* gnutls_x509_trust_list_add_trust_mem <1>: X509 certificate API.
                                                             (line 5198)
* gnutls_x509_trust_list_deinit:         X509 certificate API.
                                                             (line 5225)
* gnutls_x509_trust_list_get_issuer:     X509 certificate API.
                                                             (line 5239)
* gnutls_x509_trust_list_init:           X509 certificate API.
                                                             (line 5262)
* gnutls_x509_trust_list_remove_cas:     X509 certificate API.
                                                             (line 5279)
* gnutls_x509_trust_list_remove_trust_file: X509 certificate API.
                                                             (line 5304)
* gnutls_x509_trust_list_remove_trust_mem: X509 certificate API.
                                                             (line 5326)
* gnutls_x509_trust_list_verify_crt:     Verifying X.509 certificate paths.
                                                             (line   86)
* gnutls_x509_trust_list_verify_crt <1>: X509 certificate API.
                                                             (line 5347)
* gnutls_x509_trust_list_verify_named_crt: Verifying X.509 certificate paths.
                                                             (line  113)
* gnutls_x509_trust_list_verify_named_crt <1>: X509 certificate API.
                                                             (line 5377)
* xssl_client_init:                      High level TLS API. (line   11)
* xssl_cred_deinit:                      High level TLS API. (line   44)
* xssl_cred_init:                        High level TLS API. (line   56)
* xssl_deinit:                           High level TLS API. (line   80)
* xssl_flush:                            High level TLS API. (line   92)
* xssl_getdelim:                         High level TLS API. (line  108)
* xssl_get_session:                      High level TLS API. (line  133)
* xssl_printf:                           High level TLS API. (line  143)
* xssl_read:                             High level TLS API. (line  163)
* xssl_server_init:                      High level TLS API. (line  182)
* xssl_sinit:                            High level TLS API. (line  208)
* xssl_write:                            High level TLS API. (line  228)


File: gnutls.info,  Node: Concept Index,  Prev: Function and Data Index,  Up: Top

Concept Index
*************

 [index ]
* Menu:

* abstract types:                        Abstract key types.  (line   6)
* alert protocol:                        The TLS Alert Protocol.
                                                              (line   6)
* ALPN:                                  Application Layer Protocol Negotiation (ALPN).
                                                              (line   6)
* anonymous authentication:              Anonymous authentication.
                                                              (line   6)
* API reference:                         API reference.       (line   6)
* Application Layer Protocol Negotiation: Application Layer Protocol Negotiation (ALPN).
                                                              (line   6)
* authentication methods:                Authentication methods.
                                                              (line   6)
* bad_record_mac:                        On Record Padding.   (line   6)
* callback functions:                    Callback functions.  (line   6)
* certificate authentication:            Certificate authentication.
                                                              (line   6)
* certificate authentication <1>:        More on certificate authentication.
                                                              (line   6)
* certificate requests:                  PKCS 10 certificate requests.
                                                              (line   6)
* certificate revocation lists:          PKIX certificate revocation lists.
                                                              (line   6)
* certificate status:                    OCSP certificate status checking.
                                                              (line   6)
* Certificate status request:            OCSP status request. (line   6)
* Certificate verification:              Advanced certificate verification.
                                                              (line   6)
* certification:                         Certification.       (line   6)
* certtool:                              certtool Invocation. (line   6)
* certtool help:                         certtool Invocation. (line  17)
* channel bindings:                      Channel Bindings.    (line   6)
* ciphersuites:                          Supported ciphersuites.
                                                              (line   6)
* client certificate authentication:     Client Authentication.
                                                              (line   6)
* compression algorithms:                Compression algorithms used in the record layer.
                                                              (line   6)
* contributing:                          Contributing.        (line   6)
* CRL:                                   PKIX certificate revocation lists.
                                                              (line   6)
* DANE:                                  Verifying a certificate using DANE.
                                                              (line   6)
* DANE <1>:                              Certificate verification.
                                                              (line   6)
* danetool:                              danetool Invocation. (line   6)
* danetool help:                         danetool Invocation. (line  15)
* deriving keys:                         Deriving keys for other applications/protocols.
                                                              (line   6)
* digital signatures:                    Digital signatures.  (line   6)
* DNSSEC:                                Verifying a certificate using DANE.
                                                              (line   6)
* DNSSEC <1>:                            Certificate verification.
                                                              (line   6)
* download:                              Downloading and installing.
                                                              (line   6)
* Encrypted keys:                        Managing encrypted keys.
                                                              (line   6)
* error codes:                           Error codes.         (line   6)
* example programs:                      GnuTLS application examples.
                                                              (line   6)
* examples:                              GnuTLS application examples.
                                                              (line   6)
* exporting keying material:             Deriving keys for other applications/protocols.
                                                              (line   6)
* FDL, GNU Free Documentation License:   Copying Information. (line   6)
* generating parameters:                 Parameter generation.
                                                              (line   6)
* gnutls-cli:                            gnutls-cli Invocation.
                                                              (line   6)
* gnutls-cli help:                       gnutls-cli Invocation.
                                                              (line  17)
* gnutls-cli-debug:                      gnutls-cli-debug Invocation.
                                                              (line   6)
* gnutls-cli-debug help:                 gnutls-cli-debug Invocation.
                                                              (line  21)
* gnutls-serv:                           gnutls-serv Invocation.
                                                              (line   6)
* gnutls-serv help:                      gnutls-serv Invocation.
                                                              (line  16)
* hacking:                               Contributing.        (line   6)
* handshake protocol:                    The TLS Handshake Protocol.
                                                              (line   6)
* hardware security modules:             Smart cards and HSMs.
                                                              (line   6)
* hardware tokens:                       Smart cards and HSMs.
                                                              (line   6)
* hash functions:                        Hash and HMAC functions.
                                                              (line   6)
* heartbeat:                             HeartBeat.           (line   6)
* HMAC functions:                        Hash and HMAC functions.
                                                              (line   6)
* installation:                          Downloading and installing.
                                                              (line   6)
* internal architecture:                 Internal architecture of GnuTLS.
                                                              (line   6)
* key extraction:                        Deriving keys for other applications/protocols.
                                                              (line   6)
* Key pinning:                           Verifying a certificate using trust on first use authentication.
                                                              (line   6)
* Key pinning <1>:                       Certificate verification.
                                                              (line   6)
* key sizes:                             Selecting cryptographic key sizes.
                                                              (line   6)
* keying material exporters:             Deriving keys for other applications/protocols.
                                                              (line   6)
* maximum fragment length:               Maximum fragment length negotiation.
                                                              (line   6)
* OCSP:                                  OCSP certificate status checking.
                                                              (line   6)
* OCSP Functions:                        OCSP API.            (line   6)
* OCSP status request:                   OCSP status request. (line   6)
* ocsptool:                              ocsptool Invocation. (line   6)
* ocsptool help:                         ocsptool Invocation. (line  16)
* Online Certificate Status Protocol:    OCSP certificate status checking.
                                                              (line   6)
* OpenPGP API:                           OpenPGP API.         (line   6)
* OpenPGP certificates:                  OpenPGP certificates.
                                                              (line   6)
* OpenPGP server:                        Echo server with OpenPGP authentication.
                                                              (line   6)
* OpenSSL:                               Compatibility with the OpenSSL library.
                                                              (line   6)
* OpenSSL encrypted keys:                Managing encrypted keys.
                                                              (line 226)
* p11tool:                               p11tool Invocation.  (line   6)
* p11tool help:                          p11tool Invocation.  (line  24)
* parameter generation:                  Parameter generation.
                                                              (line   6)
* PCT:                                   On SSL 2 and older protocols.
                                                              (line  37)
* PKCS #10:                              PKCS 10 certificate requests.
                                                              (line   6)
* PKCS #11 tokens:                       Smart cards and HSMs.
                                                              (line   6)
* PKCS #12:                              Managing encrypted keys.
                                                              (line 120)
* PKCS #8:                               Managing encrypted keys.
                                                              (line  85)
* Priority strings:                      Priority Strings.    (line   6)
* PSK authentication:                    Authentication using PSK.
                                                              (line   6)
* psktool:                               psktool Invocation.  (line   6)
* psktool help:                          psktool Invocation.  (line  16)
* public key algorithms:                 Public key algorithms.
                                                              (line   6)
* random numbers:                        Random number generation.
                                                              (line   6)
* record padding:                        On Record Padding.   (line   6)
* record protocol:                       The TLS record protocol.
                                                              (line   6)
* renegotiation:                         Safe renegotiation.  (line   6)
* reporting bugs:                        Bug Reports.         (line   6)
* resuming sessions:                     Resuming Sessions.   (line   6)
* resuming sessions <1>:                 Session resumption.  (line   6)
* safe renegotiation:                    Safe renegotiation.  (line   6)
* Secure RTP:                            SRTP.                (line   6)
* server name indication:                Server name indication.
                                                              (line   6)
* session resumption:                    Resuming Sessions.   (line   6)
* session resumption <1>:                Session resumption.  (line   6)
* session tickets:                       Session tickets.     (line   6)
* Smart card example:                    Client using a smart card with TLS.
                                                              (line   6)
* smart cards:                           Smart cards and HSMs.
                                                              (line   6)
* SRP authentication:                    Authentication using SRP.
                                                              (line   6)
* srptool:                               srptool Invocation.  (line   6)
* srptool help:                          srptool Invocation.  (line  23)
* SRTP:                                  SRTP.                (line   6)
* SSH-style authentication:              Verifying a certificate using trust on first use authentication.
                                                              (line   6)
* SSH-style authentication <1>:          Certificate verification.
                                                              (line   6)
* SSL 2:                                 On SSL 2 and older protocols.
                                                              (line   6)
* symmetric algorithms:                  Symmetric algorithms.
                                                              (line   6)
* symmetric cryptography:                Symmetric algorithms.
                                                              (line   6)
* symmetric encryption algorithms:       Encryption algorithms used in the record layer.
                                                              (line   6)
* thread safety:                         Thread safety.       (line   6)
* tickets:                               Session tickets.     (line   6)
* TLS extensions:                        TLS Extensions.      (line   6)
* TLS extensions <1>:                    Maximum fragment length negotiation.
                                                              (line   6)
* TLS extensions <2>:                    Server name indication.
                                                              (line   6)
* TLS extensions <3>:                    Session tickets.     (line   6)
* TLS extensions <4>:                    HeartBeat.           (line   6)
* TLS layers:                            TLS layers.          (line   6)
* TPM:                                   Trusted Platform Module.
                                                              (line   6)
* tpmtool:                               tpmtool Invocation.  (line   6)
* tpmtool help:                          tpmtool Invocation.  (line  15)
* transport layer:                       The transport layer. (line   6)
* transport protocol:                    The transport layer. (line   6)
* Trust on first use:                    Verifying a certificate using trust on first use authentication.
                                                              (line   6)
* Trust on first use <1>:                Certificate verification.
                                                              (line   6)
* trusted platform module:               Trusted Platform Module.
                                                              (line   6)
* upgrading:                             Upgrading from previous versions.
                                                              (line   6)
* verifying certificate paths:           Verifying X.509 certificate paths.
                                                              (line   6)
* verifying certificate paths <1>:       Verifying a certificate in the context of TLS session.
                                                              (line   6)
* verifying certificate paths <2>:       Verifying a certificate using trust on first use authentication.
                                                              (line   6)
* verifying certificate paths <3>:       Verifying a certificate using DANE.
                                                              (line   6)
* X.509 certificates:                    X.509 certificates.  (line   6)
* X.509 distinguished name:              X.509 distinguished names.
                                                              (line   6)
* X.509 Functions:                       X509 certificate API.
                                                              (line   6)

