// Based on spec in FIPS180-2 doc:
//  http://csrc.nist.gov/publications/fips/fips180-2/fips180-2withchangenotice.pdf

sha256 : {a} (64 >= width (a * 8),
              512 * ((a + 72) / 64) - 8 * a >= 65) =>
         [a][8] -> [256]
sha256 msg =
    join (reverse (Hs @ (width Hs - 1)))
    where
      Hs =
          [iv256] #
          [block (H, [reverse w | w <- split M]) | H <- Hs
                                                 | M <- pad (join [reverse c | c <- msg])]


iv256 : [8][32]
iv256 =
    [0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A, 0x510E527F,
     0x9B05688C, 0x1F83D9AB, 0x5BE0CD19]

pad : {a} (64 >= width a, 512 * ((a + 576) / 512) - a >= 65) =>
      [a] -> [(a + 65 + 511) / 512][512]
pad msg = split (msg # [True] # zero # (width msg : [64]))

Ks : [64][32]
Ks =
    [0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5, 0x3956C25B,
     0x59F111F1, 0x923F82A4, 0xAB1C5ED5, 0xD807AA98, 0x12835B01,
     0x243185BE, 0x550C7DC3, 0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7,
     0xC19BF174, 0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
     0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA, 0x983E5152,
     0xA831C66D, 0xB00327C8, 0xBF597FC7, 0xC6E00BF3, 0xD5A79147,
     0x06CA6351, 0x14292967, 0x27B70A85, 0x2E1B2138, 0x4D2C6DFC,
     0x53380D13, 0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
     0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3, 0xD192E819,
     0xD6990624, 0xF40E3585, 0x106AA070, 0x19A4C116, 0x1E376C08,
     0x2748774C, 0x34B0BCB5, 0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F,
     0x682E6FF3, 0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
     0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2]

block : ([8][32], [16][32]) -> [8][32]
block ([H0, H1, H2, H3, H4, H5, H6, H7], M) =
    [H0 + As @ 64, H1 + Bs @ 64, H2 + Cs @ 64, H3 + Ds @ 64,
     H4 + Es @ 64, H5 + Fs @ 64, H6 + Gs @ 64, H7 + Hs @ 64]
    where
      Ws : [64][32]
      Ws =
          M # [W16 + (s0 W15) + W7 + (s1 W2)
                  | W16 <- drop`{16 - 16} Ws
                  | W15 <- drop`{16 - 15} Ws
                  | W7 <- drop`{16 - 7} Ws
                  | W2 <- drop`{16 - 2} Ws
                  | t <- [16 .. 63] ]
           where
             s0 x = x >>> 7 ^ x >>> 18 ^ x >> 3
             s1 y = y >>> 17 ^ y >>> 19 ^ y >> 10
      As =
          [H0] #
          [t1 + t2 | t1 <- T1s
                   | t2 <- T2s]
      Bs = [H1] # As
      Cs = [H2] # Bs
      Ds = [H3] # Cs
      Es =
          [H4] #
          [d + t1 | d <- Ds
                  | t1 <- T1s]
      Fs = [H5] # Es
      Gs = [H6] # Fs
      Hs = [H7] # Gs
      T1s : [64][32]
      T1s =
          [h + (s1 e) + ch + k + w
                  | e <- Es
                  | h <- Hs
                  | ch <- CHs
                  | k <- Ks
                  | w <- Ws]
           where
             s1 x = x >>> 6 ^ x >>> 11 ^ x >>> 25
      CHs : [65][32]
      CHs =
          [e && f ^ ~e && g | e <- Es
                            | f <- Fs
                            | g <- Gs]
      T2s : [65][32]
      T2s =
          [(s0 a) + (maj a b c)
                   | a <- As
                   | b <- Bs
                   | c <- Cs]
           where
             s0 x = x >>> 2 ^ x >>> 13 ^ x >>> 22
             maj x y z = x && y ^ x && z ^ y && z

// tests
TM = split`{16} (pad (join ""))
// TB = block (iv256, TM@0)

t0 =
    sha256 "" ==
    0xE3B0C44298FC1C149AFBF4C8996FB92427AE41E4649B934CA495991B7852B855
t1 =
    sha256 "The quick brown fox jumps over the lazy dog" ==
    0xD7A8FBB307D7809469CA9ABCB0082E4F8D5651E46D3CDB762D02D0BF37C9E592
t2 =
    sha256 "The quick brown fox jumps over the lazy cog" ==
    0xE4C4D8F3BF76B692DE791A173E05321150F7A345B46484FE427F6ACC7ECC81BE
t3 =
    sha256 "abc" ==
    0xBA7816BF8F01CFEA414140DE5DAE2223B00361A396177A9CB410FF61F20015AD
t4 =
    sha256 "abcdbcdecdefdefgefghfghighijhijkijkljklmklmnlmnomnopnopq" ==
    0x248D6A61D20638B8E5C026930C3E6039A33CE45964FF2167F6ECEDD419DB06C1

test = [t0, t1, t2, t3, t4] == ~zero
